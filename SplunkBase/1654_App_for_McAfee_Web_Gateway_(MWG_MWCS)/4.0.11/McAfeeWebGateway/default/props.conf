[mcafee:webgateway:custom]
TIME_PREFIX=^
MAX_TIMESTAMP_LOOKAHEAD=27
SHOULD_LINEMERGE=false
LINE_BREAKER  =([\r\n]+)
EVENT_BREAKER =([\r\n]+)
EVENT_BREAKER_ENABLE = true
TRUNCATE=999999

# TIME_FORMAT
# there are several time formats to choose, don't set it here if not sure
# Setup is in MWG > Policy > Log Handler > Splunk > Set Timestamp
# DateTime.ToISOString (2010-03-22 11:45:12) TIME_FORMAT=%Y-%m-%d %H:%M:%S
# DateTime.ToISOString with Milliseconds (2010-03-22 11:45:12.123) TIME_FORMAT=%Y-%m-%d %H:%M:%S.%3N
# DateTime.ToISOString with Milliseconds and timezone (2010-03-22 11:45:12.123 -0600) TIME_FORMAT=%Y-%m-%d %H:%M:%S.%3N %z
# DateTime.ToISOString and timezone (2010-03-22 11:45:12 -0600) TIME_FORMAT=%Y-%m-%d %H:%M:%S %z
TIME_FORMAT=%Y-%m-%d %H:%M:%S %z
# DateTime.ToGMTString (Mon, 22 March 2010 11:45:36 GMT) TIME_FORMAT=%a, %d %B %Y %H:%M:%S %Z
# DateTime.ToISO8601String (2016-01-26T11:45:36.695Z) - can produce inconsistent results, don't use it
# DateTime.ToNumber (Unix epoch time - 1512915182) TIME_FORMAT=%s
# DateTime.ToWebReporterString ([29/Oct/2010:14:28:15 +0000]) TIME_FORMAT=%d/%b/%Y:%H:%M:%S %z , TIME_PREFIX=\[

KV_MODE = none
ANNOTATE_PUNCT = false
category = Network & Security
description = Output produced by the McAfee Web Gateway (MWG)
pulldown_type = 1
disabled = false

TRANSFORMS-0_delete_syslog_prefix = 0_delete_syslog_prefix

# MWG sends other system events along with proxy events via deamon.info. Fiter out anything that doesn't look like a timestamp:
# THIS IS A DANGEROUS OPTION THAT CAN LEAD TO THE DATA LOSS
#TRANSFORMS-0_delete_non_mwg_events_sent_via_syslog = delete_non_mwg_events_sent_via_syslog

# 2021-02-18 22:26:22.615 +0100 204 allow 192.168.2.nnn https GET eu-tlp02.kameleoon.com 443 674/142 77/25 
#EXTRACT-a_fixed_format=^\d\d\d\d-\d\d\-\d\d \d\d:\d\d:\d\d[\d\. \+\-]* (?<status>\d+) (?<action>[a-z]+) (?<src>[a-f\d\.:%]+) (?<url_protocol>\w+) (?<http_method>\w+) (?<dest>[\w\-\.]+) (?<dest_port>\d+) (?<bytes_out>\d+)/(?<bytes_in>\d+) (?<duration>\d+)/(?<response_time>\d+)
# modified 15.03.2021 to accept more than 2 spaces in between and allow domain names with not ascii characters (i.e. umlauts)
EXTRACT-a_fixed_format=^\d\d\d\d-\d\d\-\d\d\s+\d\d:\d\d:\d\d[\d\. \+\-]*\s+(?<status>\d+)\s+(?<action>[a-z]+)\s+(?<src>[a-f\d\.:%]+)\s+(?<url_protocol>\w+)\s+(?<http_method>\w+)\s+(?<dest>[^\s]+)\s+(?<dest_port>\d+)\s+(?<bytes_out>\d+)/(?<bytes_in>\d+)\s+(?<duration>\d+)/(?<response_time>\d+)


EXTRACT-uri_path=\sup="(?<uri_path>[^"]+)"
EXTRACT-http_user_agent=\sua="(?<http_user_agent>[^"]+)"
EXTRACT-category=\sc="(?<categories>[^"]+)"
EXTRACT-dest_ip=\sdip=(?<dest_ip>[^ ]+)
EXTRACT-dest_ips=\sdips="(?<dest_ip>[^"]+)"
EXTRACT-url_domain=\sud="(?<url_domain>[^ ]+)"

EXTRACT-ssl_client_and_server_cipher=\sccsc=(?<ssl_client_cipher>[^/ ]+)/(?<ssl_server_cipher>[^ ]+)
EXTRACT-ssl_client_server_protocol=\ssslp=(?<ssl_client_protocol>[^/ ]+)/(?<ssl_server_protocol>[^ ]+)

EXTRACT-ssl_days_expired=\scrtdays=(?<ssl_cert_days_expired>\-?\d+)
EXTRACT-ssl_subject_common_name=\ssslcn="(?<ssl_subject_common_name>[^"]+)"
EXTRACT-ssl_subject_alternative_names=\ssan="(?<ssl_subject_alternative_names>[^"]+)"
EXTRACT-ssl_client_server_key_exchange_bits=\skex=(?<ssl_client_kex_bits>[^/ ]+)/(?<ssl_server_kex_bits>[^ ]+)
EXTRACT-ssl_server_cert_chain_issuer_cns=\ssslicn="(?<ssl_server_cert_chain_issuer_cns>[^"]+)"
EXTRACT-ssl_server_cert_hash=\ssslh=(?<ssl_server_cert_hash>[^ ]+)
EXTRACT-ssl_chain_length=\schl=(?<ssl_chain_length>\d+)


EXTRACT-reverse_dns=\srdns=(?<reverse_dns>[^ ]+)
EXTRACT-rule_stats=\srn=(?<rules_fired>\d+)/(?<rules_evaluated>\d+)
EXTRACT-rule=\srul="(?<rule>[^"]+)"
EXTRACT-src_port=\ssrcp=(?<src_port>\d+)
EXTRACT-connection_runtime=\sconrt=(?<connection_runtime>\d+)
EXTRACT-bytes_from_client_bytes_to_client=\sb=(?<bytes_from_client>\d+)/(?<bytes_to_client>\d+)
EXTRACT-proxy_src_ip=\spsrcip=(?<proxy_src_ip>[^ ]+)
EXTRACT-proxy-src_port=\spsrcp=(?<proxy_src_port>\d+)
EXTRACT-http_version=\spiv=(?<req_http_version>[^/]+)/(?<resp_http_version>[^ ]+)
EXTRACT-web_reputation=\sr=(?<web_reputation>[^ ]+)
EXTRACT-timers=\st=(?<t_dns>\d+)/(?<t_connect>\d+)/(?<t_frfsc>\d+)/(?<t_lrlsc>\d+)/(?<t_fsfrs>\d+)/(?<t_lsfrs>\d+)/(?<t_lslrs>\d+)/(?<t_rule_engine>\d+)/(?<t_externals>\d+)
EXTRACT-log_duration=\stl=(?<logging_duration>\d+)
EXTRACT-http_content_type=\sct="(?<http_content_type>[^"]+)"
EXTRACT-error_template=\stmplt="(?<error_template>[^"]+)"
EXTRACT-block_id=\sbid=(?<block_id>\d+)
EXTRACT-app=\sa="(?<app>[^"]+)"
EXTRACT-uri_query=\sqry="(?<uri_query>[^"]+)"
EXTRACT-cookie=\sco="(?<cookie>[^"]+)"
EXTRACT-user=\su="(?<user>[^"]+)"
EXTRACT-http_referrer=\sref="(?<http_referrer>[^"]+)"
EXTRACT-http_referrer_domain=\srefd="(?<http_referrer_domain>[^"]+)"
EXTRACT-all_request_headers=\sall_request_headers="(?<all_request_headers>[^"]+)"
EXTRACT-all_response_headers=\sall_response_headers="(?<all_response_headers>[^"]+)"
EXTRACT-header_via_request=\sviareq="(?<header_via_request>[^"]+)"
EXTRACT-header_via_response=\sviaresp="(?<header_via_response>[^"]+)"
EXTRACT-header_location=\sloc="(?<header_location>[^"]+)"
EXTRACT-request_headers_length=\srqhl=(?<req_headers_length>\d+)
EXTRACT-response_headers_length=\srsphl=(?<resp_headers_length>\d+)
EXTRACT-request_headers_verbose=\srqhlv="(?<req_headers_verbose>[^"]+)"
EXTRACT-response_headers_verbose=\srsphlv="(?<resp_headers_verbose>[^"]+)"
EXTRACT-headers_length=\shdrs=(?<req_headers_length>\d+)/(?<resp_headers_length>\d+)
EXTRACT-content_length=\scl=(?<content_length>\d+)
EXTRACT-content-disposition=\scontentdisp='(?<content_disposition>[^']+)'

EXTRACT-body_bytes=\sbb=(?<body_bytes>[^ ]+)
EXTRACT-embeddings=\semb=(?<embeddings>\d+)
EXTRACT-nested_archive_level=\sembl=(?<nested_archive_level>\d+)
EXTRACT-encrypted=\sencrypt=(?<contains_encrypted>\d+)

EXTRACT-malware_probability=\smlwrp=(?<malware_probability>\d+)
EXTRACT-malware=\smalware="(?<malware>[^"]+)"
EXTRACT-malware_file_name=\smalware_file_name="(?<malware_file_name>[^"]+)"
EXTRACT-malware_file_hash=\smalware_file_hash="(?<malware_file_hash>[^"]+)"
EXTRACT-app_reputation=\sarep="(?<app_reputation>[^"]+)"

EXTRACT-auth_method=\sauthm="(?<authentication_method>[^"]+)"
EXTRACT-auth_realm=\sauthr="(?<authentication_realm>[^"]+)"
EXTRACT-auth_groups=\sgrps="(?<auth_groups>[^"]+)"
EXTRACT-auth_failure_message=\sauthfm="(?<auth_failure_message>[^"]+)"
EXTRACT-auth_failure_id=\sauthfid=(?<auth_failure_id>\d+)

EXTRACT-cache_status=\scast=(?<cache_status>[^ ]+)

EXTRACT-executables=\sexe=(?<contains_exe>\d+)
EXTRACT-macros=\smacro=(?<contains_macro>\d+)

EXTRACT-media_type_ensured=\smte="(?<media_type_ensured>[^"]+)"
EXTRACT-media_type_not_ensured=\smtne="(?<media_type_not_ensured>[^"]+)"

EXTRACT-stream_probability=\sstreamp=(?<stream_probability>\d+)
EXTRACT-stream_matched_rule=\sstreamr="(?<stream_matched_rule>[^"]+)"

EXTRACT-proxy_ip=\spip=(?<proxy_ip>[^ ]+)
EXTRACT-proxy_port=\spp=(?<proxy_port>\d+)

EXTRACT-client_process=\sprocess="(?<client_process>[^"]+)"
EXTRACT-client_info=\sclient_info="(?<client_info>[^"]+)"
EXTRACT-client_host=\ssrch="(?<client_host>[^"]+)"
EXTRACT-x_forwarded_for=\sxff=(?<x_forwarded_for>[^ ]+)


EXTRACT-connection_protocol=\sconp=(?<connection_protocol>[^ ]+)
EXTRACT-orig_dest_ip=\sorigdestip=(?<orig_dest_ip>[^ ]+)
EXTRACT-command_categories=\scommand_categories="(?<command_categories>[^"]+)"
EXTRACT-command_parameter=\scommand_parameter="(?<command_parameter>[^"]+)"

EXTRACT-uploads=\suploads="(?<uploads>[^"]+)"

EXTRACT-protocol_failure_description=\spfail="(?<protocol_failure_description>[^"]+)"
EXTRACT-error_id=\serrid=(?<error_id>\d+)
EXTRACT-error_message=\serrmsg="(?<error_message>[^"]+)"
EXTRACT-block_reason=\sbreason="(?<block_reason>[^"]+)"
EXTRACT-action_names=\san="(?<action_names>[^"]+)"

EXTRACT-geolocation=\sgeo=(?<geolocation>[^ ]+)
EXTRACT-url_length=\surllen=(?<url_length>\d+)

EXTRACT-extract_file_watchlist = file_watchlist="(?<watchlist>[^"]+)"

# www.bbc.co.uk -> co.uk, www.example.com -> example.com
EXTRACT-last_two_labels_from_long_dest = ^.*\.(?<last_two_labels_1>[^\.]+\.[a-zA-Z]+)$ in dest
# example.com -> example.com, 123.com -> 123.com
EXTRACT-last_two_labels_from_short_dest = ^(?<last_two_labels_2>[^\.]+\.[a-zA-Z]+)$ in dest

EXTRACT-timer_logging = \stl=(?<timer_logging>\d+)

REPORT-extract_watchlist=extract_watchlist
REPORT-values = ccert, cntx, tcn, rqcompst, rscompst, caic, caif, mbmismatch, ctmt0, ct-mt, stream, tunnel, rstc, bydcc, fwddns, revdns, cloudlkp, frepgd, frepknwn, frepbd


FIELDALIAS-http_referer=http_referrer AS http_referer
FIELDALIAS-signature = malware AS signature
FIELDALIAS-src_ip    = src AS src_ip

EVAL-bytes = bytes_out + bytes_in

EVAL-category_short = split(categories, ", ")

EVAL-category = coalesce ( category, "uncategorized" )

EVAL-rule = CASE ( rule = "L"     , "Last Rule" ,\
                   isnotnull(rule), rule        ,\
                   1=1            , "-"         )

EVAL-user = coalesce ( user, "-" )

EVAL-url_domain = coalesce ( url_domain, last_two_labels_1, last_two_labels_2 )

EVAL-resp_http_version = coalesce ( resp_http_version, "-" )
EVAL-vendor= "McAfee"
EVAL-product = "Web Gateway"
EVAL-vendor_product = "McAfee Web Gateway"
EVAL-file_hash = CASE (isnotnull(file_hash), mvdedup(file_hash))
EVAL-file_name = CASE (isnotnull(file_name), mvdedup(file_name))
EVAL-ensured_mediatypes = CASE (isnotnull(ensured_mediatypes), mvdedup(ensured_mediatypes))

EVAL-media_type_ensured = CASE ( content_type_equals_ensured_type = "true" AND isnotnull(http_content_type) , http_content_type ,\
                                 isnotnull(media_type_ensured) , media_type_ensured )

EVAL-url  = CASE ( url_protocol = "https" AND dest_port = 443 AND isnotnull(uri_path)   , url_protocol . "://" . dest                   . uri_path      ,\
                   url_protocol = "https" AND dest_port = 443                           , url_protocol . "://" . dest                                   ,\
                   url_protocol = "https"                     AND isnotnull(uri_path)   , url_protocol . "://" . dest . ":" . dest_port . uri_path      ,\
                   url_protocol = "https"                                               , url_protocol . "://" . dest . ":" . dest_port                 ,\
                   url_protocol = "http"  AND dest_port = 80  AND isnotnull(uri_path)   , url_protocol . "://" . dest                   . uri_path      ,\
                   url_protocol = "http"  AND dest_port = 80                            , url_protocol . "://" . dest                                   ,\
                   url_protocol = "http"                      AND isnotnull(uri_path)   , url_protocol . "://" . dest . ":" . dest_port . uri_path      ,\
                   url_protocol = "http"                                                , url_protocol . "://" . dest . ":" . dest_port                 ,\
  isnotnull(url_protocol) AND isnotnull(dest) AND isnotnull(dest_port) AND isnotnull(uri_path) , url_protocol . "://" . dest . ":" . dest_port . uri_path      ,\
  isnotnull(url_protocol) AND isnotnull(dest) AND isnotnull(dest_port) , url_protocol . "://" . dest . ":" . dest_port       ,\
                   1=1, "XXX" )                                                                  


# TODO: search for event without url -> parsing problem                

# TODO malware_file_name/file_hash -> file_name/file_hash

EVAL-web_reputation_risk = CASE ( web_reputation < 15, "MinimalRisk" ,\
                                  web_reputation < 30, "Unverified"   ,\
                                  web_reputation < 50, "MediumRisk"  ,\
                                  web_reputation > 49, "HighRisk"    ,\
                                  1=1                , "unknown"      )

LOOKUP-mwg_block_reason_lookup = mwg_block_reason_lookup block_id OUTPUT block_reason
LOOKUP-mwg_url_categories_lookup = mwg_url_categories_lookup category_short OUTPUT category
LOOKUP-mwg_openssl_hex_codes_mapping1 = mwg_openssl_hex_codes_mapping hex AS ssl_server_cipher OUTPUT cipher AS ssl_server_cipher
LOOKUP-mwg_openssl_hex_codes_mapping2 = mwg_openssl_hex_codes_mapping hex AS ssl_client_cipher OUTPUT cipher AS ssl_client_cipher


# OLD MWGaccess3 format for McAfee Web Gateway App v3.0.7
[MWGaccess3]

#IF you have OLD data;  please turn KV_MODE from none into auto;  if this is not done
#you will lose access to viewing many of your old fields
KV_MODE = auto

SEDCMD-0_delete_syslog_prefix = s/^<\d+>\w+\s+\d+\s+\d\d:\d\d:\d\d\s+[^:]+:\s//

REPORT-status_code = mwg_status_code
REPORT-blockid = mwg_blockid
REPORT-connect_protocol = mwg_connect_protocol
REPORT-url_protocol = mwg_url_protocol
REPORT-time_dns = mwg_time_dns
REPORT-time_connect = mwg_time_connect
REPORT-time_server = mwg_time_server
REPORT-time_total = mwg_time_total
REPORT-bytes_from_client = mwg_bytes_from_client
REPORT-bytes_to_server = mwg_bytes_to_server
REPORT-bytes_from_server = mwg_bytes_from_server
REPORT-bytes_to_client = mwg_bytes_to_client
REPORT-http_user_agent = mwg_http_user_agent
REPORT-src = mwg_src
REPORT-dst = mwg_dst
REPORT-http_referrer = mwg_http_referrer
REPORT-http_method = mwg_http_method
REPORT-http_content_type = mwg_http_content_type
REPORT-dest = mwg_dest
REPORT-user = mwg_user
REPORT-url = mwg_url
REPORT-category = mwg_category
REPORT-dest_port = mwg_dest_port
REPORT-bytes = mwg_bytes
REPORT-rep = mwg_rep
REPORT-app = mwg_app
REPORT-rule = mwg_rule
REPORT-mlwr = mwg_mlwr

EVAL-dest = if(dest='-',dst,dest)
EVAL-transport = "tcp"
### uncomment for partial IDS CIM compatibility
#EVAL-ids_type = "network"
EVAL-url_length = len(url)


FIELDALIAS-status = status_code AS status
FIELDALIAS-bytes_in = bytes_from_client AS bytes_in
FIELDALIAS-bytes_out = bytes_to_client AS bytes_out
FIELDALIAS-bytes = bytes_to_client AS bytes
FIELDALIAS-src_ip = src AS src_ip
FIELDALIAS-srcip = src AS srcip
FIELDALIAS-dest_ip = dst AS dest_ip
FIELDALIAS-http_content_type = http_content_type AS mt
FIELDALIAS-ua = http_user_agent AS ua
FIELDALIAS-urlc = category AS urlc
FIELDALIAS-dhost = dest AS dhost
FIELDALIAS-urlp = dest_port AS urlp
FIELDALIAS-dvc = host AS dvc
### uncomment for partial IDS CIM compatibility
#FIELDALIAS-signature = mlwr AS signature
#FIELDALIAS-severity_id = rep AS severity_id

LOOKUP-vendor_info_for_mwg = mwg_vendor_info_lookup sourcetype OUTPUT vendor,product
LOOKUP-action_for_mwg = mwg_action_lookup blockID OUTPUT action
###########################################
#Minimal Risk: <15
#Unverified:    15 - 29
#Medium Risk:   30 - 49
#High Risk:    >= 50
###########################################
LOOKUP-severity_for_mwg = mwg_severity_lookup rep OUTPUT severity

[mcafee:webgateway:default]
#
TIME_PREFIX=\[
## MAX_TIMESTAMP_LOOKAHEAD depends on the time format (see below) and should be set between 10 and 27
##MAX_TIMESTAMP_LOOKAHEAD=27
MAX_TIMESTAMP_LOOKAHEAD=35

SHOULD_LINEMERGE=false
LINE_BREAKER =([\r\n]+)
EVENT_BREAKER =([\r\n]+)
EVENT_BREAKER_ENABLE = true
# for some archives the log line can be as long as 1000000
TRUNCATE=999999

# TIME_FORMAT
# there are several time formats to choose, don't set it here if not sure
# Setup is in MWG > Policy > Log Handler > Splunk > Set Timestamp
# DateTime.ToISOString (2010-03-22 11:45:12) TIME_FORMAT=%Y-%m-%d %H:%M:%S
# DateTime.ToISOString with Milliseconds (2010-03-22 11:45:12.123) TIME_FORMAT=%Y-%m-%d %H:%M:%S.%3N
# DateTime.ToISOString with Milliseconds and timezone (2010-03-22 11:45:12.123 -0600) TIME_FORMAT=%Y-%m-%d %H:%M:%S.%3N %z
# DateTime.ToGMTString (Mon, 22 March 2010 11:45:36 GMT) TIME_FORMAT=%a, %d %B %Y %H:%M:%S %Z
# DateTime.ToISO8601String (2016-01-26T11:45:36.695Z) - is is broken, don't use it
# DateTime.ToNumber (Unix epoch time - 1512915182) TIME_FORMAT=%s
# DateTime.ToWebReporterString (29/Oct/2010:14:28:15 +0000) TIME_FORMAT=%d/%b/%Y:%H:%M:%S %z
TIME_FORMAT=%d/%b/%Y:%H:%M:%S %z

KV_MODE = none

ANNOTATE_PUNCT = false

category = Network & Security
description = Output produced by the McAfee Web Gateway (MWG)
pulldown_type = 1
disabled = false

SEDCMD-0_delete_syslog_prefix = s/^<\d+>\w+\s+\d+\s+\d\d:\d\d:\d\d\s+[^:]+:\s//

#TRANSFORMS-0_delete_non_mwg_events_sent_via_syslog = delete_non_mwg_events_sent_via_syslog
TRANSFORMS-1_delete_header_line = delete_header_line

#time_stamp "auth_user" src_ip status_code "req_line" "categories" "rep_level" "media_type" bytes_to_client bytes_from_client "user_agent" "virus_name" "block_res" "application_name"
# [01/Mar/2021:00:19:29 +0100] "" 192.168.2.nnn 200 "GET https://googleads.g.doubleclick.net/pagead/id HTTP/2.0" "Web Ads" "Minimal Risk" "" 723 247 "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko/20100101 Firefox/86.0" "" "0" "Doubleclick"

EXTRACT-1_mcafee_webgateway_default = ^\[[^\]]+\] "(?<user>[^"]*)" (?<src>[^ ]*) (?<status>[^ ]*) "(?<first_line>[^"]*)" "(?<category>[^"]*)" "(?<web_reputation_risk>[^"]*)" "(?<http_content_type>[^"]*)" (?<bytes_to_client>[^ ]+) (?<bytes_from_client>[^ ]+) "(?<http_user_agent>[^"]*)" "(?<malware>[^"]*)" "(?<block_id>[^"]*)" "(?<app>[^"]*)"

EXTRACT-2_url_parts = ^(?<http_method>[^ ]*) (?<url>[^ ]*) (?<protocol_and_version>.*)$ IN first_line
EXTRACT-3_url_parts = ^(?<url_protocol>[^:]{1,10})://(?<dest>[^:]+):(?<dest_port>\d+)(?<uri_path>/[^\?]*)(?<uri_query>\??.*) IN url
EXTRACT-4_url_parts = ^(?<url_protocol>[^:]{1,10})://(?<dest>[^/]+)(?<uri_path>/[^\?]*)(?<uri_query>\??.*) IN url
EXTRACT-5_url_parts = ^(?<dest>[^:]+):(?<dest_port>\d{1,5}) IN url
EXTRACT-6_url_parts = ^(?<dest_ip>\d+\.\d+\.\d+\.\d+)$ in dest
EXTRACT-7_url_parts = (?<url_domain>[^\.]+\.[a-zA-Z]+)$ in dest

FIELDALIAS-bytes_in = bytes_to_client AS bytes_in
FIELDALIAS-bytes_out = bytes_from_client AS bytes_out

EVAL-bytes = bytes_in + bytes_out
EVAL-url_length = len(url)

EVAL-dest_port = CASE ( isnotnull(dest_port), dest_port ,\
                        lower(url_protocol) = "http", "80"     ,\
                        lower(url_protocol) = "https" , "443"  ,\
                        lower(url_protocol) = "ftp"   , "21"   ,\
                        lower(url_protocol) = "wss"   , "443"  ,\
                        lower(url_protocol) = "ws"    , "80"  )
EVAL-category = split(category, ", ")
EVAL-action   = CASE ( status = "403" AND block_id != 0 , "blocked" ,\
                       status = "407" AND block_id = 81 , "auth"    ,\
                       status <  500  AND block_id =  0 , "allowed" ,\
                       status >= 499                    , "error"   ,\
                       isnotnull(status)                , "allowed" ,\
                       isnull(status)                   , "error"   ) 
                      

[mcafee:webgateway:wgcs_v5]
TIME_PREFIX = ","1[6789]\d\d\d\d\d\d\d\d","
MAX_TIMESTAMP_LOOKAHEAD = 20
SHOULD_LINEMERGE=false
LINE_BREAKER  =([\r\n]+)
EVENT_BREAKER =([\r\n]+)
EVENT_BREAKER_ENABLE = true
TRUNCATE=999999

#"user_id","username","source_ip","http_action","server_to_client_bytes","client_to_server_bytes","requested_host","requested_path","result","virus","request_timestamp_epoch","request_timestamp","uri_scheme","category","media_type","application_type","reputation","last_rule","http_status_code","client_ip","location","block_reason","user_agent_product","user_agent_version","user_agent_comment","process_name","destination_ip","destination_port"
#"-1","208.65.146.n","208.65.146.n","GET","206","1040","api.mwginternal.com","/pip/rbi/info","OBSERVED","","1626329868","2021-07-15 06:17:48","https","Business, Software/Hardware","application/x-empty","","Minimal Risk","Internal Request handled","200","208.65.146.n","","","Other","","","","78.47.250.n","443"

#TIME_FORMAT=%s
TIME_FORMAT=%Y-%m-%d %H:%M:%S

KV_MODE = none
ANNOTATE_PUNCT = false
category = Network & Security
description = Output produced by the McAfee Web Gateway Cloud Service (McAfee WGCS)
pulldown_type = 1
disabled = false

TRANSFORMS-0_delete_wgcs_header_line = 0_delete_wgcs_header_line

#EXTRACT-wgcs_5 = ^"(?<user_id>[^"]*)","(?<username>[^"]*)","(?<source_ip>[^"]*)","(?<http_action>[^"]*)","(?<server_to_client_bytes>[^"]*)","(?<client_to_server_bytes>[^"]*)","(?<requested_host>[^"]*)","(?<requested_path>[^"]*)","(?<result>[^"]*)","(?<virus>[^"]*)","(?<request_timestamp_epoch>[^"]*)","(?<request_timestamp>[^"]*)","(?<uri_scheme>[^"]*)","(?<category>[^"]*)","(?<media_type>[^"]*)","(?<application_type>[^"]*)","(?<reputation>[^"]*)","(?<last_rule>[^"]*)","(?<http_status_code>[^"]*)","(?<client_ip>[^"]*)","(?<location>[^"]*)","(?<block_reason>[^"]*)","(?<user_agent_product>[^"]*)","(?<user_agent_version>[^"]*)","(?<user_agent_comment>[^"]*)","(?<process_name>[^"]*)","(?<destination_ip>[^"]*)","(?<destination_port>[^"]*)"

EXTRACT-wgcs_5 = (?s)^"(?<user_id>[^"]*)","(?<username>[^"]*)","(?<source_ip>[^"]*)","(?<http_action>[^"]*)","(?<server_to_client_bytes>[^"]*)","(?<client_to_server_bytes>[^"]*)","(?<requested_host>[^"]*)","(?<requested_path>.*)","(?<result>[^"]*)","(?<virus>[^"]*)","(?<request_timestamp_epoch>[^"]*)","(?<request_timestamp>[^"]*)","(?<uri_scheme>[^"]*)","(?<category>[^"]*)","(?<media_type>[^"]*)","(?<application_type>[^"]*)","(?<reputation>[^"]*)","(?<last_rule>.*)","(?<http_status_code>\d+)","(?<client_ip>[^"]*)","(?<location>[^"]*)","(?<block_reason>[^"]*)","(?<user_agent_product>[^"]*)","(?<user_agent_version>[^"]*)","(?<user_agent_comment>.*)","(?<process_name>[^"]*)","(?<destination_ip>[^"]*)","(?<destination_port>[^"]*)"$

# www.bbc.co.uk -> co.uk, www.example.com -> example.com
EXTRACT-last_two_labels_from_long_dest = ^.*\.(?<last_two_labels_1>[^\.]+\.[a-zA-Z]+)$ in requested_host
# example.com -> example.com, 123.com -> 123.com
EXTRACT-last_two_labels_from_short_dest = ^(?<last_two_labels_2>[^\.]+\.[a-zA-Z]+)$ in requested_host


FIELDALIAS-uri_path = requested_path AS uri_path
#FIELDALIAS-http_user_agent = user_agent_comment AS http_user_agent
FIELDALIAS-http_user_agent = user_agent_product AS http_user_agent
FIELDALIAS-dest_ip = destination_ip AS dest_ip
FIELDALIAS-dest_host = requested_host AS dest_host
FIELDALIAS-dest = requested_host AS dest
FIELDALIAS-dest_port = destination_port AS dest_port
FIELDALIAS-rule = last_rule AS rule
FIELDALIAS-bytes_in = server_to_client_bytes AS bytes_in
FIELDALIAS-bytes_out = client_to_server_bytes AS bytes_out
FIELDALIAS-web_reputation = reputation AS web_reputation
FIELDALIAS-http_content_type = media_type AS http_content_type
FIELDALIAS-block_id = block_reason AS block_id
FIELDALIAS-app = application_type AS app
FIELDALIAS-user = username AS user
FIELDALIAS-malware = virus AS malware
FIELDALIAS-client_process = process_name AS client_process
#FIELDALIAS-src_ip = source_ip AS src_ip
FIELDALIAS-src_ip = client_ip AS src_ip
FIELDALIAS-src = client_ip AS src
FIELDALIAS-status = http_status_code AS status
FIELDALIAS-http_method = http_action AS http_method
FIELDALIAS-url_protocol = uri_scheme AS url_protocol

EVAL-cached = 0
EVAL-url_domain = coalesce ( last_two_labels_1, last_two_labels_2 )
EVAL-bytes = bytes_out + bytes_in
EVAL-url  = CASE ( url_protocol = "https" AND dest_port = 443 AND isnotnull(uri_path)   , url_protocol . "://" . dest                   . uri_path      ,\
                   url_protocol = "https" AND dest_port = 443                           , url_protocol . "://" . dest                                   ,\
                   url_protocol = "https"                     AND isnotnull(uri_path)   , url_protocol . "://" . dest . ":" . dest_port . uri_path      ,\
                   url_protocol = "https"                                               , url_protocol . "://" . dest . ":" . dest_port                 ,\
                   url_protocol = "http"  AND dest_port = 80  AND isnotnull(uri_path)   , url_protocol . "://" . dest                   . uri_path      ,\
                   url_protocol = "http"  AND dest_port = 80                            , url_protocol . "://" . dest                                   ,\
                   url_protocol = "http"                      AND isnotnull(uri_path)   , url_protocol . "://" . dest . ":" . dest_port . uri_path      ,\
                   url_protocol = "http"                                                , url_protocol . "://" . dest . ":" . dest_port                 ,\
  isnotnull(url_protocol) AND isnotnull(dest) AND isnotnull(dest_port) AND isnotnull(uri_path) , url_protocol . "://" . dest . ":" . dest_port . uri_path      ,\
  isnotnull(url_protocol) AND isnotnull(dest) AND isnotnull(dest_port) , url_protocol . "://" . dest . ":" . dest_port       ,\
                   1=1, "XXX" )

EVAL-action = CASE ( result = "OBSERVED", "allowed", result = "DENIED", "blocked", 1=1, "unknown" )

EVAL-web_reputation_risk = CASE ( web_reputation < 15, "MinimalRisk" ,\
                                  web_reputation < 30, "Unverified"   ,\
                                  web_reputation < 50, "MediumRisk"  ,\
                                  web_reputation > 49, "HighRisk"    ,\
                                  1=1                , "unknown"      )

EVAL-category = split(category, ", ")
#EVAL-category = coalesce ( category, "uncategorized" )

EVAL-resp_http_version = "-"
EVAL-http_user_agent_length = length(http_user_agent)
EVAL-vendor_product = "McAfee Web Gateway Cloud Services"
 
[mcafee:webgateway:audit]
TIME_PREFIX = ^Timestamp\s\s:\s
MAX_TIMESTAMP_LOOKAHEAD = 35
TIME_FORMAT = %d/%b/%Y:%H:%M:%S.%3N %z
SHOULD_LINEMERGE = false
LINE_BREAKER  = ([_\r\n]+)Timestamp\s\s:\s
EVENT_BREAKER = ([_\r\n]+)Timestamp\s\s:\s
EVENT_BREAKER_ENABLE = true
TRUNCATE = 999999

SEDCMD-delete_empty_lines = s/\r\n[\r\n]+$//
TRANSFORMS-delete_lines = delete_underscore_lines, delete_empty_lines
REPORT-audit_extract_kv = audit_extract_kv, audit_extract_details

# all Actions in scur/k/server/audit/ - 66 actions on MWG version 10.2.1
# map to Auth, Change
# perl -ne 'chomp($_);if(/(ADDED|CREAT|FILE_UPLOAD).*$/){print "$_,added\n"} elsif(/(AUTH).*$/){print "$_,success\n"} elsif(/(BACKUP).*$/){print "$_,created\n"} elsif(/(DASHBOARD_DATA_RESET|DELETED|FILES_DELETE).*$/){print "$_,deleted\n"} elsif(/(DATE_CHANGED|NTLM|MODIFIED|MOVED|REORDERED|RESTORE_FAILED|SYSTEM_LIST_UPDATE).*$/){print "$_,modified\n"} elsif(/(EXPORT_PRIVATE_KEY|FILE_DOWNLOAD|SAVING).*$/){print "$_,read\n"}else{print "$_\n"}' ../lookups/mwg_audit_actions.csv > ../lookups/mwg_audit_actions3.csv

LOOKUP-mwg_audit_action_lookup = mwg_audit_action_lookup Action OUTPUT action change_type object_category
EVAL-user = IF ( Action IN ("CREATED_NEW_USER","DELETED_USER","MODIFIED_USER"), Login, User)
EVAL-src_user = CASE ( Action IN ("CREATED_NEW_USER","DELETED_USER","MODIFIED_USER"), User)
EVAL-src = CASE ( match(Source_ID, "^\d+\.\d+\.\d+\.\d+$"), Source_ID,\
                  match(Source_ID, "^[a-f0-9]+:[a-f0-9:]+$"), Source_ID )
EVAL-object = CASE ( NOT Action IN ("USER_LOGIN","USER_LOGIN_FAILED","USER_LOGOUT","USER_TIMED_OUT"), tostring(Source_ID))
EVAL-object_id = CASE ( NOT Action IN ("USER_LOGIN","USER_LOGIN_FAILED","USER_LOGOUT","USER_TIMED_OUT"), tostring(Source_ID))
EVAL-dest = coalesce ( Appliance, host) 
EVAL-dvc = coalesce ( Appliance, host)
EVAL-vendor_product = "Mcafee Web Gateway"
                   
