<?xml version="1.0"?>
<form version="1.1">
  <label>Potential Risks</label>
  <fieldset>
    <input type="text" token="user">
      <label>User</label>
      <default/>
      <prefix>user=</prefix>
      <initialValue/>
    </input>
    <input type="text" token="src">
      <label>Src IP</label>
      <default/>
      <prefix>src=</prefix>
      <initialValue/>
    </input>
    <input type="text" token="dest">
      <label>Dest</label>
      <default/>
      <prefix>dest=</prefix>
      <initialValue/>
    </input>
    <input type="text" token="http_user_agent">
      <label>User-Agent</label>
      <default/>
      <prefix>http_user_agent=</prefix>
      <initialValue/>
    </input>
    <input type="multiselect" token="action" searchWhenChanged="true">
      <default>allowed,blocked,auth,error</default>
      <prefix>(</prefix>
      <suffix>)</suffix>
      <valuePrefix>action="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter> OR </delimiter>
      <choice value="allowed">allowed</choice>
      <choice value="blocked">blocked</choice>
      <choice value="auth">auth</choice>
      <choice value="error">error</choice>
      <label>Action</label>
    </input>
    <input type="time" searchWhenChanged="false">
      <default>
        <earliest>-30m</earliest>
        <latest>now</latest>
      </default>
    </input>
  </fieldset>

  <row>
    <table>
      <title>Top SRC with high Ratio of High Risk Requests (&gt;5%)</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ | fields web_reputation dest src | stats count(eval(web_reputation &gt; 30 )) as HighRiskRequests, count as TotalRequests, dc(dest) AS "#dest" by src | eval HighRisk%=round(HighRiskRequests/TotalRequests*100) | search HighRisk% &gt; 5| sort -HighRisk% | head 100 </query>
      </search>
    </table>
  </row>
  <row>
    <table>
      <title>Unusal Ports</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ (url_protocol="http" AND dest_port != 80 ) OR (url_protocol="https" AND dest_port != 443 ) OR (url_protocol="ftp" AND dest_port != 21 ) OR ( http_method = "CONNECT" AND dest_port != 443 ) | fields http_method status action url src http_user_agent dest dest_port | stats count, values(http_method) AS http_method, values(status) AS status, values(action) AS action, dc(url) AS "#urls", dc(src) AS "#src", dc(http_user_agent) AS "#User-Agent" by dest, dest_port | sort -count</query>
      </search>
    </table>
  </row>
  <row>
    <table>
      <title>Requests to IP Addresses</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ | where dest=dest_ip | fields http_method status action url src http_user_agent dest dest_port | stats count, values(http_method) AS http_method, values(status) AS status, values(action) AS action, dc(url) AS "#urls", dc(src) AS "#src", dc(http_user_agent) AS "#User-Agent" by dest, dest_port | sort -count</query>
      </search>
    </table>
  </row>
  <row>
    <table>
      <title>CONNECT Requests to IP Addresses</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ http_method="CONNECT" | where dest=dest_ip | fields http_method status action url src http_user_agent dest dest_port | stats count, values(http_method) AS http_method, values(status) AS status, values(action) AS action, dc(url) AS "#urls", dc(src) AS "#src", dc(http_user_agent) AS "#User-Agent" by dest, dest_port | sort -count</query>
      </search>
    </table>
  </row>
  <row>
    <table>
      <title>Very long URLs</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ url_length > 5000 | fields url category web_reputation src http_user_agent url_length dest | stats count, dc(url) AS #url, values(category) AS category, values(web_reputation) AS web_reputation, dc(src) AS "#src", dc(http_user_agent) AS #http_user_agent, avg(url_length) AS avg_url_length by dest | sort -count | eval avg_url_length=round(avg_url_length) </query>
      </search>
    </table>
  </row>


  <row>
    <table>
      <title>Very large request and response Headers</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ req_headers_length &gt; 2000 OR resp_headers_length &gt; 2000 | fields url category web_reputation src http_user_agent req_headers_length resp_headers_length dest | stats count, dc(url) AS #url, values(category) AS category, values(web_reputation) AS web_reputation, dc(src) AS "#src", dc(http_user_agent) AS #http_user_agent, avg(req_headers_length) AS req_headers_length, avg(resp_headers_length) AS resp_headers_length by dest | sort -count | eval req_headers_length=round(req_headers_length) | eval resp_headers_length=round(resp_headers_length)</query>
      </search>
    </table>
  </row>
  <row>
    <table>
      <title>Non-resolvable Domains, potential DGA (Domain Generation Algorythm)</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ error_template="notresolvable" | fields src http_user_agent dest | stats sparkline count dc(src) AS #src dc(http_user_agent) AS #user_agent by dest | sort - count </query>
      </search>
    </table>
  </row>
  <row>
    <table>
      <title>Content-Disposition</title>
      <search>
        <query> `index_and_sourcetype` $user$ $src$ $dest$ $http_user_agent$ $action$ content_disposition=* | fields url_domain dest content_disposition src http_user_agent url_domain dest | eval url_domain=coalesce(url_domain, dest) | stats count values(content_disposition) AS content_disposition dc(src) AS #src dc(http_user_agent) AS #http_user_agent by url_domain | sort - count</query>
      </search>
    </table>
  </row>



</form>
