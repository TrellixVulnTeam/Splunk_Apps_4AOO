#
# Saved searches to populate lookups used by uberAgent. Do not edit!
#

[populate_appnameidmapping]
search = index=`uberAgent_index` sourcetype=uberAgent:Application:AppNameIdMapping AppId=* AppName=* | stats latest(_time) as _time mode(AppName) as AppName by AppId | inputlookup append=t lookup_appnameidmapping | stats latest(_time) as _time latest(AppName) as AppName by AppId | eval TimeDelta=now()-_time | search TimeDelta<31536000 | fields AppName AppId _time | outputlookup lookup_appnameidmapping
dispatch.earliest_time = -1h
dispatch.latest_time = now
run_on_startup = true
enableSched  = 1
cron_schedule = */5 * * * *
schedule_window = auto

[populate_hostinfo]
search = | pivot `uA_DM_System_MachineInventory` System_MachineInventory latest(_time) as LastSeen values(OsVersion) as OsVersion latest(OsBuild) as OsBuild latest(OsType) as OsType latest(AdDomainDns) as AdDomainDns latest(AdSite) as AdSite latest(AdOu) as AdOu latest(CtxFarmName) as CtxFarmName latest(CtxMachineCatalogName) as CtxMachineCatalogName latest(CtxDeliveryGroupName) as CtxDeliveryGroupName latest(HwManufacturer) as HwManufacturer latest(HwModel) as HwModel latest(RAMSizeGB) as RAMSizeGB latest(IsBatteryPresent) as IsBatteryPresent latest(CPUName) as CPUName latest(CPUSockets) as CPUSockets latest(CPUCoresPhysical) as CPUCoresPhysical latest(CPUCoresLogical) as CPUCoresLogical latest(CPUMaxMhz) as CPUMaxMhz latest(HwIsVirtualMachine) as HwIsVirtualMachine latest(OsUpdateBuildRevision) as OsUpdateBuildRevision splitrow host splitrow _time | join type=outer host [ | pivot `uA_DM_System_NetworkConfigInformation` System_NetworkConfigInformation values(NetworkConfigIPv4) as NetworkConfigIPv4 splitrow host] | eval LastSeen = round (strptime (LastSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | inputlookup append=t lookup_hostinfo | fields - Ipv4Address | stats latest(LastSeen) as LastSeen latest(OsVersion) as OsVersion latest(OsBuild) as OsBuild latest(OsType) as OsType latest(AdDomainDns) as AdDomainDns latest(AdSite) as AdSite latest(AdOu) as AdOu latest(CtxFarmName) as CtxFarmName latest(CtxMachineCatalogName) as CtxMachineCatalogName latest(CtxDeliveryGroupName) as CtxDeliveryGroupName latest(HwManufacturer) as HwManufacturer latest(HwModel) as HwModel latest(RAMSizeGB) as RAMSizeGB latest(IsBatteryPresent) as IsBatteryPresent latest(CPUName) as CPUName latest(CPUSockets) as CPUSockets latest(CPUCoresPhysical) as CPUCoresPhysical latest(CPUCoresLogical) as CPUCoresLogical latest(CPUMaxMhz) as CPUMaxMhz latest(HwIsVirtualMachine) as HwIsVirtualMachine latest(OsUpdateBuildRevision) as OsUpdateBuildRevision latest(NetworkConfigIPv4) as Ipv4Address by host | eval OsPlatform = if(like(HwManufacturer,"%Apple%"), "macOS", "Windows") | eval TimeDelta=now()-LastSeen | search TimeDelta<31536000 | fields host OsPlatform OsVersion OsBuild OsType AdDomainDns AdSite AdOu CtxFarmName CtxMachineCatalogName CtxDeliveryGroupName HwManufacturer HwModel Ipv4Address RAMSizeGB IsBatteryPresent CPUName CPUSockets CPUCoresPhysical CPUCoresLogical CPUMaxMhz HwIsVirtualMachine OsUpdateBuildRevision LastSeen | outputlookup lookup_hostinfo
dispatch.earliest_time = -24h
dispatch.latest_time = now
run_on_startup = true
enableSched  = 1
cron_schedule = 10 */2 * * *
schedule_window = auto

[populate_hosttags]
search = | pivot `uA_DM_Tags_UserHost` Tags_UserHost latest(_time) as LastSeen values(TagData) as TagData filter TagType is 1 splitrow host splitrow TagName | eval TagsHost=mvzip(TagName, TagData, "=") | eval LastSeen = round (strptime (LastSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | inputlookup append=t lookup_hosttags | mvexpand TagsHost | rex field=TagsHost "(?<TagName>.+?(?==))" | rex field=TagsHost "(?<TagData>(?<==).*)" | eventstats max(LastSeen) as NewestEvent by host TagName | where LastSeen == NewestEvent | stats max(LastSeen) as LastSeen values(TagsHost) as TagsHost by host | eval TimeDelta=now()-LastSeen | search TimeDelta<31536000 | fields host TagsHost LastSeen
dispatch.earliest_time = -24h
dispatch.latest_time = now
action.populate_lookup = 1
action.populate_lookup.dest = lookup_hosttags
run_on_startup = true
enableSched  = 1
cron_schedule = 10 */2 * * *
schedule_window = auto

[populate_usertags]
search = | pivot `uA_DM_Tags_UserHost` Tags_UserHost latest(_time) as LastSeen values(TagData) as TagData filter TagType is 2 splitrow User splitrow TagName | eval TagsUser=mvzip(TagName, TagData, "=") | eval LastSeen = round (strptime (LastSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | inputlookup append=t lookup_usertags | mvexpand TagsUser | rex field=TagsUser "(?<TagName>.+?(?==))" | rex field=TagsUser "(?<TagData>(?<==).*)" | eventstats max(LastSeen) as NewestEvent by User TagName | where LastSeen == NewestEvent | stats max(LastSeen) as LastSeen values(TagsUser) as TagsUser by User | eval TimeDelta=now()-LastSeen | search TimeDelta<31536000  | fields User TagsUser LastSeen
dispatch.earliest_time = -24h
dispatch.latest_time = now
action.populate_lookup = 1
action.populate_lookup.dest = lookup_usertags
run_on_startup = true
enableSched  = 1
cron_schedule = */15 * * * *
schedule_window = auto

[populate_processstartup_processlist]
search = | pivot `uA_DM_Process_ProcessStartup` Process_ProcessStartup earliest(_time) as FirstSeen latest(_time) as LastSeen splitrow ProcName | eval FirstSeen = round (strptime (FirstSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | eval LastSeen = round (strptime (LastSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | eval ProcName = lower (ProcName) | inputlookup append=t lookup_processstartup_processlist | eval FirstSeen = coalesce (FirstSeen, LastSeen) | stats min(FirstSeen) as FirstSeen max(LastSeen) as LastSeen by ProcName | eval TimeDelta=now()-LastSeen | search TimeDelta<31536000 | fields ProcName FirstSeen LastSeen | outputlookup lookup_processstartup_processlist
dispatch.earliest_time = -2h
dispatch.latest_time = now
run_on_startup = true
enableSched  = 1
cron_schedule = 13 * * * *
schedule_window = auto

[populate_networktargetperformance_targetlist]
search = | pivot `uA_DM_Process_NetworkTargetPerformance` Process_NetworkTargetPerformance earliest(_time) as FirstSeen latest(_time) as LastSeen splitrow NetTargetRemoteNameAddress | eval FirstSeen = round (strptime (FirstSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | eval LastSeen = round (strptime (LastSeen, "%Y-%m-%dT%H:%M:%S.%Q%z"), 0) | eval NetTargetRemoteNameAddress = lower (NetTargetRemoteNameAddress) | inputlookup append=t lookup_networktargetperformance_targetlist | eval FirstSeen = coalesce (FirstSeen, LastSeen) | stats min(FirstSeen) as FirstSeen max(LastSeen) as LastSeen by NetTargetRemoteNameAddress | eval TimeDelta=now()-LastSeen | search TimeDelta<31536000 | fields NetTargetRemoteNameAddress FirstSeen LastSeen | outputlookup lookup_networktargetperformance_targetlist
dispatch.earliest_time = -2h
dispatch.latest_time = now
run_on_startup = true
enableSched  = 1
cron_schedule = 15 * * * *
schedule_window = auto

#
# Saved searches for Experience Score calculation. Do not edit!
# Thresholds and weights may be changed through input lookups. Please check https://uberagent.com/docs/ for more information.
#

[trigger_populate_score_per_machine]
dispatch.earliest_time = -30m
dispatch.latest_time = now
search = | savedsearch populate_score_per_machine [ | inputlookup lookup_score_machine_configuration | xyseries setting setting value | stats values(*) as * | fields - setting]
run_on_startup = true
enableSched  = 1
cron_schedule = */30 * * * *
schedule_window = auto

[trigger_populate_score_per_session]
dispatch.earliest_time = -30m
dispatch.latest_time = now
search = | savedsearch populate_score_per_session [ | inputlookup lookup_score_session_configuration | xyseries setting setting value | stats values(*) as * | fields - setting]
run_on_startup = true
enableSched  = 1
cron_schedule = */30 * * * *
schedule_window = auto

[trigger_populate_score_per_application]
dispatch.earliest_time = -30m
dispatch.latest_time = now
search = | savedsearch populate_score_per_application [ | inputlookup lookup_score_application_configuration | xyseries setting setting value | stats values(*) as * | fields - setting]
run_on_startup = true
enableSched  = 1
cron_schedule = */30 * * * *
schedule_window = auto

[populate_score_per_machine]
search = | pivot `uA_DM_System_SystemPerformanceSummary` System_SystemPerformanceSummary \
    count(System_SystemPerformanceSummary) as dummy  \
    latest(index) as SourceIndex \
    splitrow host \
| fields - dummy  \
| join type=outer host  [ \
    | pivot `uA_DM_System_SystemPerformanceSummary` System_SystemPerformanceSummary  \
        sum(CPUUsagePercent) as sumCPUUsagePercent  \
        count(System_SystemPerformanceSummary) as EventCount  \
        splitrow _time period minute  \
        splitrow host  \
    | bin _time span=3m  \
    | stats   \
       sum(sumCPUUsagePercent) as sumCPUUsagePercent  \
       sum(EventCount) as EventCount by _time, host  \
    | eval AvgCPUUsagePercent = sumCPUUsagePercent / EventCount \
    | eval CountCPULowerBound = if(AvgCPUUsagePercent >= $ThresholdMachineCPUPercentLowerBound$ AND AvgCPUUsagePercent <$ThresholdMachineCPUPercentHigherBound$,1,0) \
    | eval CountCPUHigherBound = if(AvgCPUUsagePercent >= $ThresholdMachineCPUPercentHigherBound$,1,0) \
    | stats \
       sum(CountCPULowerBound) as CountCPULowerBound \
       sum(CountCPUHigherBound) as CountCPUHigherBound \
        by host \
    | eval CountCPULowerBound = coalesce(if(CountCPULowerBound>10,10,CountCPULowerBound),0) \
    | eval CountCPUHigherBound = coalesce(if(CountCPUHigherBound>10,10,CountCPUHigherBound),0) \
    | eval WeightedCPULowerBound = coalesce((CountCPULowerBound * $WeightMachineCPUPercentLowerBound$) ,0) \
    | eval WeightedCPUHigherBound = coalesce((CountCPUHigherBound * $WeightMachineCPUPercentHigherBound$) ,0) \
    | eval WeightedCPU = round(WeightedCPULowerBound + WeightedCPUHigherBound,1) \
    | fields host WeightedCPU] \
| join type=outer host  [ \
    | pivot `uA_DM_System_SystemPerformanceSummary` System_SystemPerformanceSummary  \
        sum(RAMUsagePercent) as sumRAMUsagePercent  \
        count(System_SystemPerformanceSummary) as EventCount  \
        splitrow _time period minute  \
        splitrow host  \
    | bin _time span=3m  \
    | stats   \
       sum(sumRAMUsagePercent) as sumRAMUsagePercent  \
       sum(EventCount) as EventCount by _time, host  \
    | eval AvgRAMUsagePercent = sumRAMUsagePercent / EventCount \
    | eval CountRAMLowerBound = if(AvgRAMUsagePercent >= $ThresholdMachineRAMPercentLowerBound$ AND AvgRAMUsagePercent <$ThresholdMachineRAMPercentHigherBound$,1,0) \
    | eval CountRAMHigherBound = if(AvgRAMUsagePercent >= $ThresholdMachineRAMPercentHigherBound$,1,0) \
    | stats \
       sum(CountRAMLowerBound) as CountRAMLowerBound \
       sum(CountRAMHigherBound) as CountRAMHigherBound \
        by host \
    | eval CountRAMLowerBound = coalesce(if(CountRAMLowerBound>10,10,CountRAMLowerBound),0) \
    | eval CountRAMHigherBound = coalesce(if(CountRAMHigherBound>10,10,CountRAMHigherBound),0) \
    | eval WeightedRAMLowerBound = coalesce((CountRAMLowerBound * $WeightMachineRAMPercentLowerBound$) ,0) \
    | eval WeightedRAMHigherBound = coalesce((CountRAMHigherBound * $WeightMachineRAMPercentHigherBound$) ,0) \
    | eval WeightedRAM = round(WeightedRAMLowerBound + WeightedRAMHigherBound,1) \
    | fields host WeightedRAM] \
| join type=outer host  [ \
    | pivot `uA_DM_System_SystemPerformanceSummary` System_SystemPerformanceSummary  \
        sum(IOPercentDiskTime) as sumIOPercentDiskTime  \
        count(System_SystemPerformanceSummary) as EventCount  \
        splitrow _time period minute  \
        splitrow host  \
    | bin _time span=3m  \
    | stats   \
       sum(sumIOPercentDiskTime) as sumIOPercentDiskTime  \
       sum(EventCount) as EventCount by _time, host  \
    | eval AvgIOPercentDiskTime = sumIOPercentDiskTime / EventCount \
    | eval CountDiskTimeLowerBound = if(AvgIOPercentDiskTime >= $ThresholdMachineIOPercentLowerBound$ AND AvgIOPercentDiskTime <$ThresholdMachineIOPercentHigherBound$,1,0) \
    | eval CountDiskTimeHigherBound = if(AvgIOPercentDiskTime >= $ThresholdMachineIOPercentHigherBound$,1,0) \
    | stats \
       sum(CountDiskTimeLowerBound) as CountDiskTimeLowerBound \
       sum(CountDiskTimeHigherBound) as CountDiskTimeHigherBound \
        by host \
    | eval CountDiskTimeLowerBound = coalesce(if(CountDiskTimeLowerBound>10,10,CountDiskTimeLowerBound),0) \
    | eval CountDiskTimeHigherBound = coalesce(if(CountDiskTimeHigherBound>10,10,CountDiskTimeHigherBound),0) \
    | eval WeightedDiskTimeLowerBound = coalesce((CountDiskTimeLowerBound * $WeightMachineIOPercentLowerBound$) ,0) \
    | eval WeightedDiskTimeHigherBound = coalesce((CountDiskTimeHigherBound * $WeightMachineIOPercentHigherBound$) ,0) \
    | eval WeightedDiskTime = round(WeightedDiskTimeLowerBound + WeightedDiskTimeHigherBound,1) \
    | fields host WeightedDiskTime] \
| join type=outer host  [ \
    | pivot `uA_DM_System_Bugcheck` System_Bugcheck  \
        count(System_Bugcheck) as StopErrors  \
        splitrow host \
    | eval StopErrors = case(StopErrors >= $ThresholdStopErrorCountLowerBound$ AND StopErrors < $ThresholdStopErrorCountHigherBound$,$WeightStopErrorCountLowerBound$ * 10,StopErrors >= $ThresholdStopErrorCountHigherBound$,$WeightStopErrorCountHigherBound$ * 10,0==0,0) \
    | eval WeightedStopErrors = round(StopErrors,1) \
    | fields host WeightedStopErrors] \
| join type=outer host  [search index=`uberAgent_index` sourcetype=uberAgent:System:VolumeInventory IsBootVolume=1  CapacityMB>=250 earliest=-1d latest=now \
    | stats avg(UsedSpacePercent) AS avgUsedSpacePercent  by host  \
    | eval CountUsedSpaceLowerBound = if(avgUsedSpacePercent >= $ThresholdMachineDiskUsagePercentLowerBound$ AND avgUsedSpacePercent <$ThresholdMachineDiskUsagePercentHigherBound$,1,0) \
    | eval CountUsedSpaceHigherBound = if(avgUsedSpacePercent >= $ThresholdMachineDiskUsagePercentHigherBound$,1,0) \
    | stats \
       sum(CountUsedSpaceLowerBound) as CountUsedSpaceLowerBound \
       sum(CountUsedSpaceHigherBound) as CountUsedSpaceHigherBound \
        by host \
    | eval CountUsedSpaceLowerBound = if(CountUsedSpaceLowerBound > 0,$WeightMachineDiskUsagePercentLowerBound$ * 10,0) \
    | eval CountUsedSpaceHigherBound = if(CountUsedSpaceHigherBound > 0,$WeightMachineDiskUsagePercentHigherBound$ * 10,0) \
    | eval WeightedUsedSpaceLowerBound = CountUsedSpaceLowerBound \
    | eval WeightedUsedSpaceHigherBound = CountUsedSpaceHigherBound  \
    | eval WeightedUsedSpace = round(WeightedUsedSpaceLowerBound + WeightedUsedSpaceHigherBound,1) \
    | fields host WeightedUsedSpace] \
| join type=outer host [ \
    | pivot `uA_DM_Process_NetworkTargetPerformance` Process_NetworkTargetPerformance  \
        sum(NetTargetConnectCount) as SumNetTargetConnectCount  \
        sum(NetTargetReconnectCount) as SumNetTargetReconnectCount  \
        sum(NetTargetRetransmitCount) as SumNetTargetRetransmitCount  \
        sum(NetTargetSendCount) as SumNetTargetSendCount  \
        sum(NetTargetReceiveCount) as SumNetTargetReceiveCount  \
        sum(NetTargetSendJitterCount) as SumNetTargetSendJitterCount  \
        sum(NetTargetSendJitterMs) as SumNetTargetSendJitterMs  \
        splitrow _time period minute  \
        splitrow host  \
    | join type=outer _time host  \
        [  \
            | pivot `uA_DM_Application_NetworkConnectFailure` Application_NetworkConnectFailure  \
               count(Application_NetworkConnectFailure) as SumApplicationNetworkConnectFailureCount  \
               filter NetTargetProtocols is TCP  \
               splitrow _time period minute  \
               splitrow host  \
        ]  \
    | fields + SumApplicationNetworkConnectFailureCount host _time  \
    | eval ConnectAvailability = 100 - (SumApplicationNetworkConnectFailureCount + SumNetTargetReconnectCount) / (SumApplicationNetworkConnectFailureCount + SumNetTargetConnectCount) * 100  \
    | eval TransmitAvailability = 100 - (SumNetTargetRetransmitCount / SumNetTargetSendCount) * 100  \
    | eval PacketLoss = 100 - (100 / (SumNetTargetRetransmitCount + SumNetTargetSendCount)) * SumNetTargetRetransmitCount  \
    | eval Jitter = 100 - SumNetTargetSendJitterMs / SumNetTargetSendJitterCount  \
    | eval NetworkAvailability =  (ConnectAvailability + TransmitAvailability + PacketLoss + Jitter)   \
    | eval CountNetworkAvailabilityLowerBound = if(NetworkAvailability <= $ThresholdMachineNetworkAvailabilityPercentLowerBound$ AND NetworkAvailability >$ThresholdMachineNetworkAvailabilityPercentHigherBound$,1,0) \
    | eval CountNetworkAvailabilityHigherBound = if(NetworkAvailability <= $ThresholdMachineNetworkAvailabilityPercentHigherBound$,1,0) \
    | stats \
       sum(CountNetworkAvailabilityLowerBound) as CountNetworkAvailabilityLowerBound \
       sum(CountNetworkAvailabilityHigherBound) as CountNetworkAvailabilityHigherBound \
        by host \
    | eval CountNetworkAvailabilityLowerBound = coalesce(if(CountNetworkAvailabilityLowerBound>10,10,CountNetworkAvailabilityLowerBound),0) \
    | eval CountNetworkAvailabilityHigherBound = coalesce(if(CountNetworkAvailabilityHigherBound>10,10,CountNetworkAvailabilityHigherBound),0) \
    | eval WeightedNetworkAvailabilityLowerBound = coalesce((CountNetworkAvailabilityLowerBound * $WeightMachineNetworkAvailabilityPercentHigherBound$) ,0) \
    | eval WeightedNetworkAvailabilityHigherBound = coalesce((CountNetworkAvailabilityHigherBound * $WeightMachineNetworkAvailabilityPercentLowerBound$) ,0) \
    | eval WeightedNetworkAvailability = round(WeightedNetworkAvailabilityLowerBound + WeightedNetworkAvailabilityHigherBound,1) \
    | fields host WeightedNetworkAvailability] \
    | eval _time = now() \
      | eval WeightedCPU = coalesce(WeightedCPU,0) \
      | eval WeightedRAM = coalesce(WeightedRAM,0) \
      | eval WeightedDiskTime = coalesce(WeightedDiskTime,0) \
      | eval WeightedNetworkAvailability = coalesce(WeightedNetworkAvailability,0) \
      | eval WeightedUsedSpace = coalesce(WeightedUsedSpace,0) \
      | eval WeightedStopErrors = coalesce(WeightedStopErrors,0) \
      | eval machine_cpu = if(10 - WeightedCPU == 10,null(),10 - WeightedCPU)  \
      | eval machine_ram = if(10 - WeightedRAM == 10, null(), 10 - WeightedRAM)  \
      | eval machine_diskio = if(10 - WeightedDiskTime == 10, null(), 10 - WeightedDiskTime)  \
      | eval machine_networkavailability = if (10 - WeightedNetworkAvailability == 10, null(), 10 - WeightedNetworkAvailability)  \
      | eval machine_stoperrors = if(10 - WeightedStopErrors == 10, null(), 10 - WeightedStopErrors)  \
      | eval machine_diskspace = if(10 - WeightedUsedSpace == 10, null(), 10 - WeightedUsedSpace)  \
      | eval machine_score = mvappend(machine_cpu,machine_ram,machine_diskio,machine_networkavailability,machine_stoperrors,machine_diskspace) \
      | eval machine_score=min(machine_score) \
      | fields _time host SourceIndex machine_cpu machine_ram machine_diskio machine_networkavailability machine_stoperrors machine_diskspace machine_score \
      | collect index=`uberAgentUXM_score_index` addtime=true timeformat="%s%3N" source=uberagent_score_machine marker="IsHistoric=0"
run_on_startup = false
enableSched  = 0

[populate_score_historic_per_machine]
search = index=`uberAgentUXM_score_index` source=uberagent_score_machine IsHistoric=0 | delete \
| eval dummy= [ \
                | pivot uberAgent_Score Score_Machine  \
                    avg(machine_cpu) as machine_cpu  \
                    avg(machine_ram) as machine_ram  \
                    avg(machine_diskio) as machine_diskio  \
                    avg(machine_networkavailability) as machine_networkavailability  \
                    avg(machine_stoperrors) as machine_stoperrors  \
                    avg(machine_diskspace) as machine_diskspace  \
                    avg(machine_score) as machine_score  \
                    latest(SourceIndex) as SourceIndex  \
                    splitrow  \
                       host  \
                    filter IsHistoric is 0  \
                | eval machine_cpu = if(machine_cpu == 10, null(), machine_cpu)  \
                | eval machine_ram = if(machine_ram == 10, null(), machine_ram)  \
                | eval machine_diskio = if(machine_diskio == 10, null(), machine_diskio)  \
                | eval machine_networkavailability = if(machine_networkavailability == 10, null(), machine_networkavailability)  \
                | eval machine_stoperrors = if(machine_stoperrors == 10, null(), machine_stoperrors)  \
                | eval machine_diskspace = if(machine_diskspace == 10, null(), machine_diskspace)  \
                | eval machine_score = if(machine_score == 10, null(), machine_score)  \
                | eval _time = (relative_time(now(), "-1d"))  \
                | collect index=`uberAgentUXM_score_index` addtime=true timeformat="%s%3N" source=uberagent_score_machine marker="IsHistoric=1"  \
                | eval dummy=1 | return $dummy \
            ]
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
run_on_startup = false
enableSched  = 1
cron_schedule = 15 0 * * *
schedule_window = auto

[populate_score_per_session]
search = | pivot `uA_DM_Session_SessionDetail_Users` Session_SessionDetail_Users \
        count(Session_SessionDetail_Users) as dummy  \
        latest(User) as User  \
        latest(host) as host  \
        latest(index) as SourceIndex \
        splitrow SessionGUID  \
      | fields - dummy  \
      | join type=outer SessionGUID  [| pivot `uA_DM_Session_SessionDetail_Users` Session_SessionDetail_Users  \
                        sum(SessionIODurationMs) as sumSessionIODurationMs  \
                        sum(SessionIOCount) as sumSessionIOCount  \
                        latest(User) as User  \
                        latest(host) as host  \
                        count(Session_SessionDetail_Users) as EventCount  \
                        splitrow _time period minute  \
                        splitrow SessionGUID  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumSessionIODurationMs) as sumSessionIODurationMs  \
                       sum(sumSessionIOCount) as sumSessionIOCount  \
                       latest(User) as User  \
                       latest(host) as host  \
                       sum(EventCount) as EventCount   \
                        by _time, SessionGUID  \
                    | eval AvgIOLatencyMs = sumSessionIODurationMs/sumSessionIOCount  \
                    | eval AvgIOLatencyMs = AvgIOLatencyMs / EventCount  \
                    | eval CountIOLatencyLowerBound = if(AvgIOLatencyMs >= $ThresholdIOLatencyLowerBound$ AND AvgIOLatencyMs <$ThresholdIOLatencyHigherBound$,1,0)  \
                    | eval CountIOLatencyHigherBound = if(AvgIOLatencyMs >= $ThresholdIOLatencyHigherBound$,1,0)  \
                    | stats  \
                       sum(CountIOLatencyLowerBound) as CountIOLatencyLowerBound  \
                       sum(CountIOLatencyHigherBound) as CountIOLatencyHigherBound \
                       latest(User) as User  \
                       latest(host) as host  \
                        by SessionGUID  \
                    | eval CountIOLatencyLowerBound = coalesce(if(CountIOLatencyLowerBound>10,10,CountIOLatencyLowerBound),0)  \
                    | eval CountIOLatencyHigherBound = coalesce(if(CountIOLatencyHigherBound>10,10,CountIOLatencyHigherBound),0)  \
                    | eval WeightedIOLatencyLowerBound = coalesce((CountIOLatencyLowerBound * $WeightIOLatencyLowerBound$) ,0)  \
                    | eval WeightedIOLatencyHigherBound = coalesce((CountIOLatencyHigherBound * $WeightIOLatencyHigherBound$) ,0)  \
                    | eval WeightedIOLatency = round(WeightedIOLatencyLowerBound + WeightedIOLatencyHigherBound,1)  \
                    | fields SessionGUID User host WeightedIOLatency]  \
    |  join type=outer SessionGUID  [| pivot `uA_DM_Session_SessionDetail_Users` Session_SessionDetail_Users  \
                        sum(SessionRAMUsagePercent) as sumSessionRAMUsagePercent  \
                        latest(User) as User  \
                        latest(host) as host  \
                        count(Session_SessionDetail_Users) as EventCount  \
                        splitrow _time period minute  \
                        splitrow SessionGUID  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumSessionRAMUsagePercent) as sumSessionRAMUsagePercent  \
                       latest(User) as User  \
                       latest(host) as host  \
                       sum(EventCount) as EventCount   \
                        by _time, SessionGUID  \
                    | eval AvgSessionRAMUsagePercent = sumSessionRAMUsagePercent / EventCount  \
                    | eval CountRAMLowerBound = if(AvgSessionRAMUsagePercent >= $ThresholdSessionRAMPercentLowerBound$ AND AvgSessionRAMUsagePercent <$ThresholdSessionRAMPercentHigherBound$,1,0)  \
                    | eval CountRAMHigherBound = if(AvgSessionRAMUsagePercent >= $ThresholdSessionRAMPercentHigherBound$,1,0)  \
                    | stats  \
                       sum(CountRAMLowerBound) as CountRAMLowerBound  \
                       sum(CountRAMHigherBound) as CountRAMHigherBound \
                       latest(User) as User  \
                       latest(host) as host  \
                        by SessionGUID \
                    | eval CountRAMLowerBound = coalesce(if(CountRAMLowerBound>10,10,CountRAMLowerBound),0)  \
                    | eval CountRAMHigherBound = coalesce(if(CountRAMHigherBound>10,10,CountRAMHigherBound),0)  \
                    | eval WeightedRAMLowerBound = coalesce((CountRAMLowerBound * $WeightSessionRAMPercentLowerBound$) ,0)  \
                    | eval WeightedRAMHigherBound = coalesce((CountRAMHigherBound * $WeightSessionRAMPercentHigherBound$) ,0)  \
                    | eval WeightedRAM = round(WeightedRAMLowerBound + WeightedRAMHigherBound,1)  \
                    | fields SessionGUID User host WeightedRAM] \
    |  join type=outer SessionGUID  [| pivot `uA_DM_Session_SessionDetail_Users` Session_SessionDetail_Users  \
                        sum(SessionCPUUsagePercent) as sumSessionCPUUsagePercent  \
                        latest(User) as User  \
                        latest(host) as host  \
                        count(Session_SessionDetail_Users) as EventCount  \
                        splitrow _time period minute  \
                        splitrow SessionGUID  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumSessionCPUUsagePercent) as sumSessionCPUUsagePercent  \
                       latest(User) as User  \
                       latest(host) as host  \
                       sum(EventCount) as EventCount   \
                        by _time, SessionGUID  \
                    | eval AvgSessionCPUUsagePercent = sumSessionCPUUsagePercent / EventCount  \
                    | eval CountCPULowerBound = if(AvgSessionCPUUsagePercent >= $ThresholdSessionCPUPercentLowerBound$ AND AvgSessionCPUUsagePercent <$ThresholdSessionCPUPercentHigherBound$,1,0)  \
                    | eval CountCPUHigherBound = if(AvgSessionCPUUsagePercent >= $ThresholdSessionCPUPercentHigherBound$,1,0)  \
                    | stats  \
                       sum(CountCPULowerBound) as CountCPULowerBound  \
                       sum(CountCPUHigherBound) as CountCPUHigherBound \
                       latest(User) as User  \
                       latest(host) as host  \
                        by SessionGUID \
                    | eval CountCPULowerBound = coalesce(if(CountCPULowerBound>10,10,CountCPULowerBound),0)  \
                    | eval CountCPUHigherBound = coalesce(if(CountCPUHigherBound>10,10,CountCPUHigherBound),0)  \
                    | eval WeightedCPULowerBound = coalesce((CountCPULowerBound * $WeightSessionCPUPercentLowerBound$) ,0)  \
                    | eval WeightedCPUHigherBound = coalesce((CountCPUHigherBound * $WeightSessionCPUPercentHigherBound$) ,0)  \
                    | eval WeightedCPU = round(WeightedCPULowerBound + WeightedCPUHigherBound,1)  \
                    | fields SessionGUID User host WeightedCPU] \
    | join type=outer SessionGUID  [| pivot `uA_DM_Logon_LogonDetail` Logon_LogonDetail  \
                      sum(TotalLogonTimeMs) as sumTotalLogonTimeMs  \
                      count(Logon_LogonDetail) as EventCount  \
                      latest(User) as User  \
                      latest(host) as host  \
                      splitrow SessionGUID  \
                      filter SessionLogonTime is "*"  \
                    | stats  \
                      sum(sumTotalLogonTimeMs) as sumTotalLogonTimeMs  \
                      latest(User) as User  \
                      latest(host) as host  \
                       sum(EventCount) as EventCount   \
                        by _time, SessionGUID  \
                    | eval AvgTotalLogonTimeS = (sumTotalLogonTimeMs / 1000) / EventCount  \
                    | eval CountLogonDurationLowerBound = if(AvgTotalLogonTimeS >= $ThresholdLogonDurationLowerBound$ AND AvgTotalLogonTimeS <$ThresholdLogonDurationHigherBound$,1,0)  \
                    | eval CountLogonDurationHigherBound = if(AvgTotalLogonTimeS >= $ThresholdLogonDurationHigherBound$,1,0)  \
                    | stats  \
                       sum(CountLogonDurationLowerBound) as CountLogonDurationLowerBound  \
                       sum(CountLogonDurationHigherBound) as CountLogonDurationHigherBound \
                       latest(User) as User  \
                       latest(host) as host  \
                        by SessionGUID \
                    | eval CountLogonDurationLowerBound = if(CountLogonDurationLowerBound>0,10,0) \
                    | eval CountLogonDurationHigherBound = if(CountLogonDurationHigherBound>0,10,0)  \
                    | eval WeightedLogonDurationLowerBound = (CountLogonDurationLowerBound * 0.5)  \
                    | eval WeightedLogonDurationHigherBound = (CountLogonDurationHigherBound)  \
                    | eval WeightedLogonDuration = round(WeightedLogonDurationLowerBound + WeightedLogonDurationHigherBound,1)  \
                    | fields SessionGUID User host WeightedLogonDuration] \
    | join type=outer SessionGUID  [| pivot `uA_DM_Session_SessionDetail_Users` Session_SessionDetail_Users  \
                        sum(SessionRpLatencyMs) as sumSessionRpLatencyMs  \
                        latest(User) as User  \
                        latest(host) as host  \
                        count(Session_SessionDetail_Users) as EventCount  \
                        splitrow _time period minute  \
                        splitrow SessionGUID  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumSessionRpLatencyMs) as sumSessionRpLatencyMs  \
                       latest(User) as User  \
                       latest(host) as host  \
                       sum(EventCount) as EventCount   \
                        by _time, SessionGUID  \
                    | eval AvgSessionRpLatencyMs = sumSessionRpLatencyMs / EventCount  \
                    | eval CountRpLatencyLowerBound = if(AvgSessionRpLatencyMs >= $ThresholdSessionRpLatencyMsLowerBound$ AND AvgSessionRpLatencyMs <$ThresholdSessionRpLatencyMsHigherBound$,1,0)  \
                    | eval CountRpLatencyHigherBound = if(AvgSessionRpLatencyMs >= $ThresholdSessionRpLatencyMsHigherBound$,1,0)  \
                    | stats  \
                       sum(CountRpLatencyLowerBound) as CountRpLatencyLowerBound  \
                       sum(CountRpLatencyHigherBound) as CountRpLatencyHigherBound \
                       latest(User) as User  \
                       latest(host) as host  \
                        by SessionGUID \
                    | eval CountRpLatencyLowerBound = coalesce(if(CountRpLatencyLowerBound>10,10,CountRpLatencyLowerBound),0)  \
                    | eval CountRpLatencyHigherBound = coalesce(if(CountRpLatencyHigherBound>10,10,CountRpLatencyHigherBound),0)  \
                    | eval WeightedRpLatencyLowerBound = coalesce((CountRpLatencyLowerBound * $WeightSessionRpLatencyMsLowerBound$) ,0)  \
                    | eval WeightedRpLatencyHigherBound = coalesce((CountRpLatencyHigherBound * $WeightSessionRpLatencyMsHigherBound$) ,0)  \
                    | eval WeightedRpLatency = round(WeightedRpLatencyLowerBound + WeightedRpLatencyHigherBound,1)  \
                    | fields SessionGUID User host WeightedRpLatency] \
    | eval _time = now()  \
    | eval WeightedCPU = coalesce(WeightedCPU,0)  \
    | eval WeightedRAM = coalesce(WeightedRAM,0)  \
    | eval WeightedRpLatency = coalesce(WeightedRpLatency,0)  \
    | eval WeightedLogonDuration = coalesce(WeightedLogonDuration,0)  \
    | eval WeightedIOLatency = coalesce(WeightedIOLatency,0)  \
    | eval session_cpu = if(10 - WeightedCPU == 10,null(),10 - WeightedCPU)  \
    | eval session_ram = if(10 - WeightedRAM == 10, null(), 10 - WeightedRAM)  \
    | eval session_diskio = if(10 - WeightedIOLatency == 10, null(), 10 - WeightedIOLatency)  \
    | eval session_logonduration = if(10 - WeightedLogonDuration == 10, null(), 10 - WeightedLogonDuration)  \
    | eval session_protocollatency = if(10 - WeightedRpLatency == 10, null(), 10 - WeightedRpLatency)  \
    | eval session_score = mvappend(session_cpu,session_ram,session_diskio,session_logonduration,session_protocollatency) \
    | eval session_score = min(session_score) \
    | eval Session=replace(User,"([^\\\\]+\\\\)([^\\\\]+)","\\2")+"@"+host \
    | fields _time Session User host SessionGUID SourceIndex session_cpu session_ram session_diskio session_logonduration session_protocollatency session_score \
    | collect index=`uberAgentUXM_score_index` addtime=true timeformat="%s%3N" source=uberagent_score_session marker="IsHistoric=0"
run_on_startup = false
enableSched  = 0


[populate_score_historic_per_session]
search = index=`uberAgentUXM_score_index` source=uberagent_score_session IsHistoric=0 | delete \
| eval dummy = [ \
            | pivot uberAgent_Score Score_Session \
                avg(session_cpu) as session_cpu \
                avg(session_ram) as session_ram \
                avg(session_diskio) as session_diskio \
                avg(session_logonduration) as session_logonduration \
                avg(session_protocollatency) as session_protocollatency \
                avg(session_score) as session_score \
                latest(User) as User  \
                latest(host) as host  \
                latest(SourceIndex) as SourceIndex \
                splitrow \
                   SessionGUID \
                filter IsHistoric is 0 \
             | eval session_cpu = if(session_cpu == 10, null(), session_cpu) \
             | eval session_ram = if(session_ram == 10, null(), session_ram) \
             | eval session_diskio = if(session_diskio == 10, null(), session_diskio) \
             | eval session_logonduration = if(session_logonduration == 10, null(), session_logonduration) \
             | eval session_protocollatency = if(session_protocollatency == 10, null(), session_protocollatency) \
             | eval session_score = if(session_score == 10, null(), session_score) \
             | eval _time = (relative_time(now(), "-1d")) \
             | collect index=`uberAgentUXM_score_index` addtime=true timeformat="%s%3N" source=uberagent_score_session marker="IsHistoric=1" \
             | eval dummy = 1 \
             | return $dummy \
         ]
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
run_on_startup = false
enableSched  = 1
cron_schedule = 15 0 * * *
schedule_window = auto

[populate_score_per_application]
search = | pivot `uA_DM_Process_ProcessDetail` Process_ProcessDetail \
        count(Process_ProcessDetail) as dummy  \
        latest(index) as SourceIndex \
        splitrow AppId  \
        splitrow host \
        `uberAgent_filter_AppNameIsNotOS`  \
        filter AppName isNotNull  \
      | fields - dummy  \
      | join type=outer AppId host [| pivot `uA_DM_Application_Errors` Application_Errors  \
            count(Application_Errors) as ApplicationErrors  \
            splitrow AppId  \
            splitrow host \
            `uberAgent_filter_AppNameIsNotOS`  \
            filter AppName isNotNull  \
            | eval ApplicationErrors = case(ApplicationErrors >= $ThresholdApplicationErrorCountLowerBound$ AND ApplicationErrors < $ThresholdApplicationErrorCountHigherBound$,$WeightApplicationErrorCountLowerBound$ * 10,ApplicationErrors >= $ThresholdApplicationErrorCountHigherBound$,$WeightApplicationErrorCountHigherBound$ * 10,0==0,0) \
            | eval WeightedApplicationErrors = round(ApplicationErrors,1) \
            | fields AppId WeightedApplicationErrors host ] \
     | join type=outer AppId host [| pivot `uA_DM_Process_ProcessDetail` Process_ProcessDetail   \
                        sum(ProcCPUPercent) as sumProcCPUPercent  \
                        count(Process_ProcessDetail) as EventCount  \
                        splitrow _time period minute  \
                        splitrow AppId  \
                        splitrow host \
                        `uberAgent_filter_AppNameIsNotOS`  \
                        filter AppName isNotNull  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumProcCPUPercent) as sumProcCPUPercent  \
                       sum(EventCount) as EventCount by _time, AppId host \
                    | eval AvgProcCPUPercent = sumProcCPUPercent / EventCount \
                    | eval CountCPULowerBound = if(AvgProcCPUPercent >= $ThresholdAppCPUPercentLowerBound$ AND AvgProcCPUPercent <$ThresholdAppCPUPercentHigherBound$,1,0)  \
                    | eval CountCPUHigherBound = if(AvgProcCPUPercent >= $ThresholdAppCPUPercentHigherBound$,1,0)  \
                    | stats  \
                       sum(CountCPULowerBound) as CountCPULowerBound  \
                       sum(CountCPUHigherBound) as CountCPUHigherBound  \
                        by AppId host \
                    | eval CountCPULowerBound = coalesce(if(CountCPULowerBound>10,10,CountCPULowerBound),0)  \
                    | eval CountCPUHigherBound = coalesce(if(CountCPUHigherBound>10,10,CountCPUHigherBound),0)  \
                    | eval WeightedCPULowerBound = coalesce((CountCPULowerBound * $WeightAppCPUPercentLowerBound$) ,0)  \
                    | eval WeightedCPUHigherBound = coalesce((CountCPUHigherBound * $WeightAppCPUPercentHigherBound$) ,0)  \
                    | eval WeightedCPU = round(WeightedCPULowerBound + WeightedCPUHigherBound,1)  \
                    | fields AppId host WeightedCPU] \
    | join type=outer AppId host [| pivot `uA_DM_Process_ProcessDetail` Process_ProcessDetail   \
                        sum(ProcWorkingSetMB) as sumProcWorkingSetMB  \
                        count(Process_ProcessDetail) as EventCount  \
                        splitrow _time period minute  \
                        splitrow AppId  \
                        splitrow host \
                        `uberAgent_filter_AppNameIsNotOS`  \
                        filter AppName isNotNull  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumProcWorkingSetMB) as sumProcWorkingSetMB  \
                       sum(EventCount) as EventCount by _time, AppId, host \
                    | eval AvgProcWorkingSetMB = sumProcWorkingSetMB / EventCount  \
                    | eval CountRAMLowerBound = if(AvgProcWorkingSetMB >= $ThresholdAppRAMMBLowerBound$ AND AvgProcWorkingSetMB <$ThresholdAppRAMMBHigherBound$,1,0)  \
                    | eval CountRAMHigherBound = if(AvgProcWorkingSetMB >= $ThresholdAppRAMMBHigherBound$,1,0)  \
                    | stats  \
                       sum(CountRAMLowerBound) as CountRAMLowerBound  \
                       sum(CountRAMHigherBound) as CountRAMHigherBound  \
                        by AppId host \
                    | eval CountRAMLowerBound = coalesce(if(CountRAMLowerBound>10,10,CountRAMLowerBound),0)  \
                    | eval CountRAMHigherBound = coalesce(if(CountRAMHigherBound>10,10,CountRAMHigherBound),0)  \
                    | eval WeightedRAMLowerBound = coalesce((CountRAMLowerBound * $WeightAppRAMMBLowerBound$) ,0)  \
                    | eval WeightedRAMHigherBound = coalesce((CountRAMHigherBound * $WeightAppRAMMBHigherBound$) ,0)  \
                    | eval WeightedRAM = round(WeightedRAMLowerBound + WeightedRAMHigherBound,1)  \
                    | fields AppId host WeightedRAM] \
    | join type=outer AppId host [| pivot `uA_DM_Process_ProcessDetail` Process_ProcessDetail   \
                        sum(ProcIOCount) as sumProcIOCount  \
                        count(Process_ProcessDetail) as EventCount  \
                        splitrow _time period minute  \
                        splitrow AppId  \
                        splitrow host \
                        `uberAgent_filter_AppNameIsNotOS`  \
                        filter AppName isNotNull  \
                    | bin _time span=3m  \
                    | stats   \
                       sum(sumProcIOCount) as sumProcIOCount  \
                       sum(EventCount) as EventCount by _time, AppId, host  \
                    | eval AvgProcIOCount = sumProcIOCount / EventCount \
                    | eval CountIOLowerBound = if(AvgProcIOCount >= $ThresholdAppIOCountLowerBound$ AND AvgProcIOCount <$ThresholdAppIOCountHigherBound$,1,0)  \
                    | eval CountIOHigherBound = if(AvgProcIOCount >= $ThresholdAppIOCountHigherBound$,1,0)  \
                    | stats  \
                       sum(CountIOLowerBound) as CountIOLowerBound  \
                       sum(CountIOHigherBound) as CountIOHigherBound  \
                        by AppId \
                        splitrow host \
                    | eval CountIOLowerBound = coalesce(if(CountIOLowerBound>10,10,CountIOLowerBound),0)  \
                    | eval CountIOHigherBound = coalesce(if(CountIOHigherBound>10,10,CountIOHigherBound),0)  \
                    | eval WeightedIOLowerBound = coalesce((CountIOLowerBound * $WeightAppIOCountLowerBound$) ,0)  \
                    | eval WeightedIOHigherBound = coalesce((CountIOHigherBound * $WeightAppIOCountHigherBound$) ,0)  \
                    | eval WeightedIO = round(WeightedIOLowerBound + WeightedIOHigherBound,1)  \
                    | fields AppId host WeightedIO] \
    | join type=outer AppId host [| pivot `uA_DM_Process_NetworkTargetPerformance` Process_NetworkTargetPerformance  \
                sum(NetTargetConnectCount) as SumNetTargetConnectCount  \
                sum(NetTargetReconnectCount) as SumNetTargetReconnectCount  \
                sum(NetTargetRetransmitCount) as SumNetTargetRetransmitCount  \
                sum(NetTargetSendCount) as SumNetTargetSendCount  \
                sum(NetTargetReceiveCount) as SumNetTargetReceiveCount  \
                sum(NetTargetSendJitterCount) as SumNetTargetSendJitterCount  \
                sum(NetTargetSendJitterMs) as SumNetTargetSendJitterMs  \
                splitrow _time period minute  \
                splitrow AppId  \
                splitrow host \
                `uberAgent_filter_AppNameIsNotOS`  \
                filter AppName isNotNull  \
            | join type=outer AppId host \
                [  \
                    | pivot `uA_DM_Application_NetworkConnectFailure` Application_NetworkConnectFailure  \
                       count(Application_NetworkConnectFailure) as SumApplicationNetworkConnectFailureCount  \
                       filter NetTargetProtocols is TCP  \
                       splitrow _time period minute  \
                       splitrow AppId  \
                       splitrow host \
                       `uberAgent_filter_AppNameIsNotOS`  \
                       filter AppName isNotNull  \
                ]  \
            | fields + SumApplicationNetworkConnectFailureCount host _time  \
            | eval ConnectAvailability = 100 - (SumApplicationNetworkConnectFailureCount + SumNetTargetReconnectCount) / (SumApplicationNetworkConnectFailureCount + SumNetTargetConnectCount) * 100  \
            | eval TransmitAvailability = 100 - (SumNetTargetRetransmitCount / SumNetTargetSendCount * 100)  \
            | eval PacketLoss = 100 - 100 / (SumNetTargetRetransmitCount + SumNetTargetSendCount) * SumNetTargetRetransmitCount  \
            | eval Jitter = 100 - SumNetTargetSendJitterMs / SumNetTargetSendJitterCount  \
            | eval NetworkAvailability =  (ConnectAvailability + TransmitAvailability + PacketLoss + Jitter) / 4  \
            | eval CountNetworkAvailabilityLowerBound = if(NetworkAvailability <= $ThresholdAppNetworkAvailabilityPercentLowerBound$ AND NetworkAvailability >$ThresholdAppNetworkAvailabilityPercentHigherBound$,1,0)  \
            | eval CountNetworkAvailabilityHigherBound = if(NetworkAvailability <= $ThresholdAppNetworkAvailabilityPercentHigherBound$,1,0)  \
            | stats  \
               sum(CountNetworkAvailabilityLowerBound) as CountNetworkAvailabilityLowerBound  \
               sum(CountNetworkAvailabilityHigherBound) as CountNetworkAvailabilityHigherBound  \
                by AppId  \
                splitrow host \
            | eval CountNetworkAvailabilityLowerBound = coalesce(if(CountNetworkAvailabilityLowerBound>10,10,CountNetworkAvailabilityLowerBound),0)  \
            | eval CountNetworkAvailabilityHigherBound = coalesce(if(CountNetworkAvailabilityHigherBound>10,10,CountNetworkAvailabilityHigherBound),0)  \
            | eval WeightedNetworkAvailabilityLowerBound = coalesce((CountNetworkAvailabilityLowerBound * $WeightAppNetworkAvailabilityPercentHigherBound$) ,0)  \
            | eval WeightedNetworkAvailabilityHigherBound = coalesce((CountNetworkAvailabilityHigherBound * $WeightAppNetworkAvailabilityPercentLowerBound$) ,0)  \
            | eval WeightedNetworkAvailability = round(WeightedNetworkAvailabilityLowerBound + WeightedNetworkAvailabilityHigherBound,1)  \
            | fields AppId host WeightedNetworkAvailability] \
    | join type=outer AppId host [| pivot `uA_DM_Process_NetworkTargetPerformance` Process_NetworkTargetPerformance  \
                        sum(NetTargetSendLatencyCount) AS SumNetTargetSendLatencyCount  \
                        sum(NetTargetSendDurationMs) AS SumNetTargetSendDurationMs  \
                        count(Process_NetworkTargetPerformance) as EventCount  \
                        splitrow  \
                          _time period minute  \
                        splitrow  \
                          AppId  \
                        splitrow host \
                        `uberAgent_filter_AppNameIsNotOS`  \
                        filter AppName isNotNull  \
                      | bin _time span=3m  \
                      | stats   \
                         sum(SumNetTargetSendLatencyCount) AS SumNetTargetSendLatencyCount  \
                         sum(SumNetTargetSendDurationMs) AS SumNetTargetSendDurationMs  \
                      | eval AvgTCPSendLatencyMs=SumNetTargetSendDurationMs/SumNetTargetSendLatencyCount  \
                      | eval AvgTCPSendLatencyMs = AvgTCPSendLatencyMs / EventCount \
                      | eval CountTCPSendLatencyLowerBound = if(AvgTCPSendLatencyMs <= $ThresholdAppSendLatencyMsLowerBound$ AND AvgTCPSendLatencyMs >$ThresholdAppSendLatencyMsHigherBound$,1,0)  \
                        | eval CountTCPSendLatencyHigherBound = if(AvgTCPSendLatencyMs <= $ThresholdAppSendLatencyMsHigherBound$,1,0)  \
                        | stats  \
                           sum(CountTCPSendLatencyLowerBound) as CountTCPSendLatencyLowerBound  \
                           sum(CountTCPSendLatencyHigherBound) as CountTCPSendLatencyHigherBound  \
                            by AppId host \
                        | eval CountTCPSendLatencyLowerBound = coalesce(if(CountTCPSendLatencyLowerBound>10,10,CountTCPSendLatencyLowerBound),0)  \
                        | eval CountTCPSendLatencyHigherBound = coalesce(if(CountTCPSendLatencyHigherBound>10,10,CountTCPSendLatencyHigherBound),0)  \
                        | eval WeightedTCPSendLatencyLowerBound = coalesce((CountTCPSendLatencyLowerBound * $WeightAppSendLatencyMsLowerBound$) ,0)  \
                        | eval WeightedTCPSendLatencyHigherBound = coalesce((CountTCPSendLatencyHigherBound * $WeightAppSendLatencyMsHigherBound$) ,0)  \
                        | eval WeightedTCPSendLatency = round(WeightedTCPSendLatencyLowerBound + WeightedTCPSendLatencyHigherBound,1)  \
                        | fields AppId host WeightedTCPSendLatency] \
    | join type=outer AppId host [| pivot `uA_DM_Application_UIDelay` Application_UIDelay   \
                        sum(UIDelayS) as SumUIDelayS   \
                        count(Application_UIDelay) as EventCount  \
                        splitrow _time period minute  \
                        splitrow  \
                          AppId  \
                        splitrow host \
                        `uberAgent_filter_AppNameIsNotOS`  \
                        filter AppName isNotNull  \
                      | bin _time span=3m  \
                      | stats   \
                         sum(SumUIDelayS) AS SumUIDelayS  \
                      | eval SumUIDelayS = SumUIDelayS / EventCount  \
                      | eval CountCPULowerBound = if(SumUIDelayS >= $ThresholdAppUIDelaySLowerBound$ AND SumUIDelayS <$ThresholdAppUIDelaySHigherBound$,1,0)  \
                        | eval CountUIDelayHigherBound = if(SumUIDelayS >= $ThresholdAppUIDelaySHigherBound$,1,0)  \
                        | stats  \
                           sum(CountUIDelayLowerBound) as CountUIDelayLowerBound  \
                           sum(CountUIDelayHigherBound) as CountUIDelayHigherBound  \
                            by AppId host \
                        | eval CountUIDelayLowerBound = coalesce(if(CountUIDelayLowerBound>10,10,CountUIDelayLowerBound),0)  \
                        | eval CountUIDelayHigherBound = coalesce(if(CountUIDelayHigherBound>10,10,CountUIDelayHigherBound),0)  \
                        | eval WeightedUIDelayLowerBound = coalesce((CountUIDelayLowerBound * $WeightAppUIDelaySLowerBound$) ,0)  \
                        | eval WeightedUIDelayHigherBound = coalesce((CountUIDelayHigherBound * $WeightAppUIDelaySHigherBound$) ,0)  \
                        | eval WeightedUIDelay = round(WeightedUIDelayLowerBound + WeightedUIDelayHigherBound,1)  \
                        | fields AppId host WeightedUIDelay] \
    | eval _time = now()  \
    | eval WeightedCPU = coalesce(WeightedCPU,0)  \
    | eval WeightedRAM = coalesce(WeightedRAM,0)  \
    | eval WeightedIO = coalesce(WeightedIO,0)  \
    | eval WeightedNetworkAvailability = coalesce(WeightedNetworkAvailability,0)  \
    | eval WeightedTCPSendLatency = coalesce(WeightedTCPSendLatency,0)  \
    | eval WeightedUIDelay = coalesce(WeightedUIDelay,0)  \
    | eval WeightedApplicationErrors = coalesce(WeightedApplicationErrors,0) \
    | eval app_cpu = if(10 - WeightedCPU == 10,null(),10 - WeightedCPU)  \
    | eval app_ram = if(10 - WeightedRAM == 10, null(), 10 - WeightedRAM)  \
    | eval app_diskio = if(10 - WeightedIO == 10, null(), 10 - WeightedIO)  \
    | eval app_networkavailability = if (10 - WeightedNetworkAvailability == 10, null(), 10 - WeightedNetworkAvailability)  \
    | eval app_errors = if(10 - WeightedApplicationErrors == 10, null(), 10 - WeightedApplicationErrors)  \
    | eval app_uidelay = if(10 - WeightedUIDelay == 10, null(), 10 - WeightedUIDelay)  \
    | eval app_networklatency = if(10 - WeightedTCPSendLatency == 10, null(), 10 - WeightedTCPSendLatency)  \
    | eval app_score = mvappend(app_cpu,app_ram,app_diskio,app_networkavailability,app_errors,app_uidelay,app_networklatency)  \
    | eval app_score=min(app_score)  \
    | fields _time AppId host SourceIndex app_cpu app_ram app_diskio app_networkavailability app_errors app_uidelay app_networklatency app_score \
    | collect index=`uberAgentUXM_score_index` addtime=true timeformat="%s%3N" source=uberagent_score_application marker="IsHistoric=0"
run_on_startup = false
enableSched  = 0

[populate_score_historic_per_application]
search = index=`uberAgentUXM_score_index` source=uberagent_score_application IsHistoric=0 | delete \
| eval dummy = [ \
                 | pivot uberAgent_Score Score_Application \
                    avg(app_cpu) as app_cpu \
                    avg(app_ram) as app_ram \
                    avg(app_diskio) as app_diskio \
                    avg(app_networkavailability) as app_networkavailability \
                    avg(app_errors) as app_errors \
                    avg(app_uidelay) as app_uidelay \
                    avg(app_networklatency) as app_networklatency \
                    avg(app_score) as app_score \
                    latest(SourceIndex) as SourceIndex \
                    splitrow \
                       AppId \
                    splitrow \
                       host \
                    filter IsHistoric is 0 \
                 | eval app_cpu = if(app_cpu == 10, null(), app_cpu) \
                 | eval app_ram = if(app_ram == 10, null(), app_ram) \
                 | eval app_diskio = if(app_diskio == 10, null(), app_diskio) \
                 | eval app_networkavailability = if(app_networkavailability == 10, null(), app_networkavailability) \
                 | eval app_errors = if(app_errors == 10, null(), app_errors) \
                 | eval app_uidelay = if(app_uidelay == 10, null(), app_uidelay) \
                 | eval app_networklatency = if(app_networklatency == 10, null(), app_networklatency) \
                 | eval app_score = if(app_score == 10, null(), app_score) \
                 | eval _time = (relative_time(now(), "-1d")) \
                 | collect index=`uberAgentUXM_score_index` addtime=true timeformat="%s%3N" source=uberagent_score_application marker="IsHistoric=1" \
                 | eval dummy = 1 | return $dummy \
               ]
dispatch.earliest_time = -1d@d
dispatch.latest_time = @d
run_on_startup = false
enableSched  = 1
cron_schedule = 15 0 * * *
schedule_window = auto


