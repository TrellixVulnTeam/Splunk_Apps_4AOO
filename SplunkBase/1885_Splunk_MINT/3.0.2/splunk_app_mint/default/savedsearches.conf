[MINT: KPIs by package]
search = | tstats  dc(All_MINT.uuid) as uniques count as sessions avg(All_MINT.Performance.Network_Monitoring.latency) as latency FROM datamodel=MINT WHERE nodename=All_MINT.Usage.Session.Pings OR All_MINT.Performance.Errors.handled=false OR All_MINT.Performance.Network_Monitoring.statusCode > 0 BY nodename, All_MINT.packageName |eventstats values(latency) as latency by All_MINT.packageName |search nodename=All_MINT.Performance.Errors OR nodename=All_MINT.Usage.Session.Pings | eval type=if(nodename="All_MINT.Usage.Session.Pings", "Pings", "Errors") | eval errors=if(nodename == "All_MINT.Performance.Errors", sessions, 0) | eval pings=if(nodename == "All_MINT.Usage.Session.Pings", sessions, 0) | eventstats sum(errors) AS error_volume sum(pings) as pings_volume by All_MINT.packageName  | fields - errors, pings, type | eval error_rate=round((error_volume/pings_volume*100), 2)  | fields - error_volume, pings_volume , sessions | search nodename = All_MINT.Usage.Session.Pings  | fields - nodename | eval latency=round(latency,2)

[MINT: Crash rate]
search = | tstats  count AS count FROM datamodel=MINT WHERE ((All_MINT.Performance.Errors.handled=false) OR (nodename=All_MINT.Usage.Session.Pings)) BY nodename | search nodename=All_MINT.Performance.Errors OR nodename=All_MINT.Usage.Session.Pings  | eval type=if(nodename="All_MINT.Usage.Session.Pings", "Pings", "Errors") | eventstats sum(count) AS total | eval percent=(count/total)*100 | fields type,percent | where type="Errors" | fields percent

[MINT: Daily active users]
search = | tstats  dc("All_MINT.uuid") AS "Distinct Count of App User ID"  from datamodel=MINT where (nodename = All_MINT) prestats=true | stats dedup_splitvals=t dc("All_MINT.uuid") AS "Distinct Count of App User ID"  | fillnull "Distinct Count of App User ID" | fields , "Distinct Count of App User ID"

[MINT: Sessions]
search = | tstats  dc("All_MINT.Usage.Session.session_id") AS "Distinct Count of Session Id"  from datamodel=MINT where (nodename = All_MINT.Usage.Session.Pings) prestats=true | stats dedup_splitvals=t dc("All_MINT.Usage.Session.session_id") AS "Distinct Count of Session Id"  | fillnull "Distinct Count of Session Id" | fields , "Distinct Count of Session Id"

[MINT: Packages]
search = |tstats  values(All_MINT.platform) as platforms from datamodel=MINT  where (nodename = All_MINT.Usage.Session.Pings) by All_MINT.packageName | rename All_MINT.packageName as packageName

[MINT: Project platforms]
search = |tstats  values(All_MINT.platform) as platform from datamodel=MINT  where (nodename = All_MINT.Usage.Session.Pings) | mvexpand platform

[MINT: HTTP latency by carrier]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by carrier
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network connection!=WIFI | stats avg(latency) as "Avg Latency", stdev(latency) as "Stdev Latency", sparkline(avg(latency),1d) as "Latency daily trend" by carrier | sort -"Avg Latency" | rename carrier as Carrier

[MINT: HTTP latency by connection]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by connection type
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | stats avg(latency) as "Avg Latency", stdev(latency) as "Stdev Latency", sparkline(avg(latency),1d) as "Latency daily trend" by connection | sort -"Avg Latency" | rename connection as Connection

[MINT: HTTP latency by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by country
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = index=mint sourcetype=mint:network | iplocation remoteIP | stats avg(latency) as "Avg Latency", stdev(latency) as "Stdev Latency", sparkline(avg(latency),1d) as "Latency daily trend" by Country | sort -"Avg Latency"

[MINT: HTTP latency by US state]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by state
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = index=mint sourcetype=mint:network | iplocation remoteIP | search Country="United States" | stats avg(latency) as "Avg Latency", stdev(latency) as "Stdev Latency", sparkline(avg(latency),1d) as "Latency daily trend" by Region | rename Region as State | sort -"Avg Latency"

[MINT: Top network errors by carrier]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top network errors by carrier
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = index=mint sourcetype=mint:network exception!=NA | top limit=3 exception by carrier

[MINT: Top network errors by connection]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top network errors by connection type
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = index=mint sourcetype=mint:network exception!=NA | top limit=3 exception by connection

[MINT: HTTP latency by OS version]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by OS version
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = index=mint sourcetype=mint:network | eval platformVersion=platform." ".osVersion | stats avg(latency) AS "Avg Latency", stdev(latency) AS "Stdev Latency" by platformVersion | sort -"Avg Latency"

[MINT: Crash rate by platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Crash rate by platform
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping OR (sourcetype=mint:error AND handled=false) platform!=NULL \
 | stats count(eval(eventtype="usage")) AS sessions, count(eval(eventtype="performance")) AS errors BY platform | eval crash_rate=(errors/sessions)*100 | table platform, crash_rate

[MINT: Crash rate by OS version]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 OS versions by highest crash rate
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping OR (sourcetype=mint:error AND handled=false) | eval platformVersion=platform." ".osVersion | stats count(eval(eventtype="usage")) AS sessions, count(eval(eventtype="performance")) AS errors BY platformVersion | eval crash_rate=(errors/sessions)*100 | table platformVersion, crash_rate | sort -crash_rate limit=15 | rename platformVersion AS "OS version", crash_rate AS "Crash rate"

[MINT: Crash rate by device]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 devices by highest crash rate
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping OR (sourcetype=mint:error AND handled=false) | stats count(eval(eventtype="usage")) AS sessions, count(eval(eventtype="performance")) AS errors BY device | eval crash_rate=(errors/sessions)*100 | table device, crash_rate | sort -crash_rate limit=15 | rename device AS "SKU", crash_rate AS "Crash rate"

[MINT: Crash rate by app]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 apps by highest crash rate
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping OR (sourcetype=mint:error AND handled=false) | eval app=packageName." ".platform | stats count(eval(eventtype="usage")) AS sessions, count(eval(eventtype="performance")) AS errors BY app | eval crash_rate=(errors/sessions)*100 | table app, crash_rate | sort -crash_rate limit=15 | rename app AS "App", crash_rate AS "Crash rate"

[MINT: Crash rate by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Countries sorted by crash rate
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping OR (sourcetype=mint:error AND handled=false) | iplocation remoteIP | stats count(eval(eventtype="usage")) AS sessions, count(eval(eventtype="performance")) AS errors BY Country | eval crash_rate=(errors/sessions)*100 | table Country, crash_rate | sort -crash_rate | rename crash_rate AS "Crash Rate"

[MINT: App usage by location]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = App usage by location
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | iplocation allfields=true remoteIP | geostats count

[MINT: App user base by location]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = App user base by location
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | dedup uuid | iplocation allfields=true remoteIP | geostats count

[MINT: Unique users by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Unique users by country
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | iplocation remoteIP | stats dc(uuid) as "Unique Users", sparkline(dc(uuid)) as "DAU Trend" by Country | sort -"Unique Users"

[MINT: App usage by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = App usage by country
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | iplocation remoteIP | stats count AS "Sessions", sparkline(count) as "Daily Sessions Trend" by Country | sort -"Sessions"

[MINT: Platform by location]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Platform usage by location
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | dedup uuid | iplocation allfields=true remoteIP | geostats count by platform

[MINT: Top platform per country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top platform per country
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | dedup uuid | iplocation remoteIP | top 1 platform by Country | sort -percent

[MINT: Top device per country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top device per country
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | dedup uuid | iplocation remoteIP | top 1 device by Country | sort -percent

[MINT: Top connection per country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top connection type per country
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
display.visualizations.type = mapping
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | dedup uuid | iplocation remoteIP | top 1 connection by Country | sort -percent

[MINT: Users by platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Number of users by platform
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = line
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | dedup uuid | timechart count by platform

[MINT: Sessions by platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Number of sessions by platform
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = line
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping |  timechart count by platform

[MINT: Usage by hour of day]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Distribution of app usage by hour of day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | eval HourOfDay=strftime(_time, "%H") | stats count by HourOfDay | sort HourOfDay

[MINT: Usage by day of week]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Distribution of app usage by day of week
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:ping | eval DayOfWeek=strftime(_time, "%a") | stats count by DayOfWeek |  eval sort_field=case(DayOfWeek=="Mon",1, DayOfWeek=="Tue",2, DayOfWeek=="Wed",3, DayOfWeek=="Thu",4, DayOfWeek=="Fri",5, DayOfWeek=="Sat",6, DayOfWeek=="Sun", 7) | sort sort_field

[MINT: HTTP latency by day of week]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by day of the week
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = area
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | eval DayOfWeek=strftime(_time, "%a") | stats avg(latency) by DayOfWeek |  eval sort_field=case(DayOfWeek=="Mon",1, DayOfWeek=="Tue",2, DayOfWeek=="Wed",3, DayOfWeek=="Thu",4, DayOfWeek=="Fri",5, DayOfWeek=="Sat",6, DayOfWeek=="Sun", 7) | sort sort_field

[MINT: HTTP latency by hour of day]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = HTTP latency trend by hour of day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = area
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | eval HourOfDay=strftime(_time, "%H") | stats avg(latency) by HourOfDay | sort HourOfDay

[MINT: HTTP error rate by platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Platforms by HTTP error rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | stats count(eval(statusCode>299)) as Errors, count(eval(statusCode>0)) as Total by platform | eval ErrorRate=(Errors/Total)*100 | table platform, ErrorRate | sort -ErrorRate

[MINT: HTTP error rate by OS version]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 OS versions by HTTP error rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | eval osVer=platform." ".osVersion | stats count(eval(statusCode>299)) as Errors, count(eval(statusCode>0)) as Total by osVer | eval ErrorRate=(Errors/Total)*100 | table osVer, ErrorRate | sort -ErrorRate limit=15

[MINT: HTTP error rate by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 25 countries by HTTP error rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | iplocation remoteIP | stats count(eval(statusCode>299)) as Errors, count(eval(statusCode>0)) as Total by Country | eval ErrorRate=(Errors/Total)*100 | table Country, ErrorRate | sort -ErrorRate limit=25

[MINT: HTTP error rate by carrier]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 carriers by HTTP error rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | stats count(eval(statusCode>299)) as Errors, count(eval(statusCode>0)) as Total by carrier | eval ErrorRate=(Errors/Total)*100 | table carrier, ErrorRate | sort -ErrorRate limit=15

[MINT: HTTP error rate by device]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 devices by HTTP error rate
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | stats count(eval(statusCode>299)) as Errors, count(eval(statusCode>0)) as Total by device | eval ErrorRate=(Errors/Total)*100 | table device, ErrorRate | sort -ErrorRate limit=15

[MINT: Transaction success rate by platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Platforms sorted by transaction success rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | stats count(eval(status="SUCCESS")) as Successful, count as Total by platform | eval SuccessRate=((Total-Successful)/Successful)*100 | table platform, SuccessRate

[MINT: Transaction success rate by carrier]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 carriers by transaction success rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | stats count(eval(status="SUCCESS")) as Successful, count as Total by carrier | eval SuccessRate=((Total-Successful)/Successful)*100 | table carrier, SuccessRate | sort -SuccessRate limit=15

[MINT: Transaction success rate by device]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top devices by transaction success rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | stats count(eval(status="SUCCESS")) as Successful, count as Total by device | eval SuccessRate=((Total-Successful)/Successful)*100 | table device, SuccessRate | sort -SuccessRate limit=15

[MINT: Top slowest transactions]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 slowest transactions
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | stats avg(tr_duration) as "Avg Duration" by tr_name | sort -"Avg Duration" top=15

[MINT: Transaction success rate by app]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 apps by transaction success rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | eval appVer=packageName." ".appVersionName." [".platform."]" | stats count(eval(status="SUCCESS")) as Successful, count as Total by appVer | eval SuccessRate=((Total-Successful)/Successful)*100 | table appVer, SuccessRate | sort -SuccessRate limit=15

[MINT: Transaction success rate by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 countries by transaction success rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | iplocation remoteIP | stats count(eval(status="SUCCESS")) as Successful, count as Total by Country | eval SuccessRate=((Total-Successful)/Successful)*100 | table Country, SuccessRate | sort -SuccessRate limit=15

[MINT: Transaction success rate by OS version]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 OS versions by transaction success rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = sourcetype="mint:trstop" | eval osVer=platform." ".osVersion | stats count(eval(status="SUCCESS")) as Successful, count as Total by osVer | eval SuccessRate=((Total-Successful)/Successful)*100 | table osVer, SuccessRate | sort -SuccessRate limit=15

[MINT: Events over time]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Distribution of events over time
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = area
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:event | timechart count by event_name

[MINT: Top events per platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 5 events per platform
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:event | top 5 event_name by platform

[MINT: Session length by hour of day]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Average session duration by hour of day
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip | eval HourOfDay=strftime(_time, "%H") | stats avg(ses_duration) by HourOfDay | sort HourOfDay

[MINT: Session length by day of week]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Average session duration by day of week
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip | eval DayOfWeek=strftime(_time, "%a") | stats avg(ses_duration) by DayOfWeek |  eval sort_field=case(DayOfWeek=="Mon",1, DayOfWeek=="Tue",2, DayOfWeek=="Wed",3, DayOfWeek=="Thu",4, DayOfWeek=="Fri",5, DayOfWeek=="Sat",6, DayOfWeek=="Sun", 7) | sort sort_field

[MINT: Session length by platform]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Average session duration by platform
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip | stats avg(ses_duration) by platform

[MINT: Session length by app]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 apps by highest average session duration
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip | eval appVer=packageName." ".appVersionName." [".platform."]" | stats avg(ses_duration) as "Avg Duration" by appVer | sort -"Avg Duration" limit=15

[MINT: Session length by OS version]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 OS versions by highest average session duration
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip | eval osVer=platform." ".osVersion | stats avg(ses_duration) as "Avg Duration" by osVer | sort -"Avg Duration" limit=15

[MINT: Session length by device]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 devices by highest average session duration
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip |  stats avg(ses_duration) as "Avg Duration" by device | sort -"Avg Duration" limit=15

[MINT: Session length by country]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 countries by highest average session duration
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:gnip | iplocation remoteIP | stats avg(ses_duration) as "Avg Duration" by Country | sort -"Avg Duration" limit=15

[MINT: HTTP bytes sent and received]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Total volume of in/out data for all apps
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = area
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | eval bytesSend=-1*requestLength | timechart avg(responseLength) as "Bytes Received", avg(bytesSend) as "Bytes Sent"

[MINT: HTTP error rate by app]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
description = Top 15 apps by HTTP error rate
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = visualizations
display.visualizations.charting.chart = bar
request.ui_dispatch_app = splunk_app_mint
request.ui_dispatch_view = search
search = tag=mint sourcetype=mint:network | eval appVer=packageName." ".appVersionName." [".platform."]" | stats count(eval(statusCode>299)) as Errors, count(eval(statusCode>0)) as Total by appVer | eval ErrorRate=(Errors/Total)*100 | table appVer, ErrorRate | sort -ErrorRate limit=15
